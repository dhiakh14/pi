{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services1/services\";\nexport class DashboardComponent {\n  constructor(taskService) {\n    this.taskService = taskService;\n    this.pieChartData = {\n      labels: [],\n      datasets: [{\n        data: [],\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']\n      }]\n    };\n    this.pieChartType = 'pie';\n    this.pieChartOptions = {\n      responsive: true,\n      plugins: {\n        legend: {\n          position: 'top'\n        }\n      }\n    };\n    this.barChartData = {\n      labels: [],\n      datasets: []\n    };\n    this.barChartType = 'bar';\n    this.barChartOptions = {\n      responsive: true,\n      scales: {\n        x: {\n          stacked: true\n        },\n        y: {\n          stacked: true,\n          beginAtZero: true\n        }\n      },\n      plugins: {\n        legend: {\n          position: 'top'\n        }\n      }\n    };\n  }\n  ngOnInit() {\n    this.fetchTasks();\n  }\n  fetchTasks() {\n    this.taskService.getAllTasks().subscribe({\n      next: tasks => {\n        this.updatePieChartData(tasks);\n        this.updateBarChartData(tasks);\n      },\n      error: err => {\n        console.error('Failed to fetch tasks:', err);\n      }\n    });\n  }\n  updatePieChartData(tasks) {\n    const statusCounts = {\n      'TO_DO': 0,\n      'PENDING': 0,\n      'IN_PROGRESS': 0,\n      'COMPLETED': 0\n    };\n    tasks.forEach(task => {\n      if (task.status && statusCounts.hasOwnProperty(task.status)) {\n        statusCounts[task.status]++;\n      }\n    });\n    this.pieChartData = {\n      labels: Object.keys(statusCounts),\n      datasets: [{\n        data: Object.values(statusCounts),\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']\n      }]\n    };\n  }\n  updateBarChartData(tasks) {\n    const dateLabels = [];\n    const startDateCounts = [];\n    const plannedEndDateCounts = [];\n    tasks.forEach(task => {\n      if (task.startDate) {\n        const startDate = new Date(task.startDate).toLocaleDateString();\n        if (!dateLabels.includes(startDate)) {\n          dateLabels.push(startDate);\n        }\n      }\n      if (task.planned_end_date) {\n        const plannedEndDate = new Date(task.planned_end_date).toLocaleDateString();\n        if (!dateLabels.includes(plannedEndDate)) {\n          dateLabels.push(plannedEndDate);\n        }\n      }\n    });\n    dateLabels.sort((a, b) => new Date(a).getTime() - new Date(b).getTime());\n    dateLabels.forEach(date => {\n      const startDateCount = tasks.filter(task => task.startDate && new Date(task.startDate).toLocaleDateString() === date).length;\n      const plannedEndDateCount = tasks.filter(task => task.planned_end_date && new Date(task.planned_end_date).toLocaleDateString() === date).length;\n      startDateCounts.push(startDateCount);\n      plannedEndDateCounts.push(plannedEndDateCount);\n    });\n    this.barChartData = {\n      labels: dateLabels,\n      datasets: [{\n        label: 'Start Date',\n        data: startDateCounts,\n        backgroundColor: '#36A2EB'\n      }, {\n        label: 'Planned End Date',\n        data: plannedEndDateCounts,\n        backgroundColor: '#FFCE56'\n      }]\n    };\n  }\n  static {\n    this.ɵfac = function DashboardComponent_Factory(t) {\n      return new (t || DashboardComponent)(i0.ɵɵdirectiveInject(i1.TaskControllerService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: DashboardComponent,\n      selectors: [[\"app-dashboard\"]],\n      decls: 15,\n      vars: 6,\n      consts: [[1, \"dashboard-container\"], [1, \"chart-wrapper\"], [1, \"task-by-status-chart\"], [\"baseChart\", \"\", 3, \"data\", \"options\", \"type\"], [1, \"task-by-dates-chart\"]],\n      template: function DashboardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Task Status Distribution\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"h3\");\n          i0.ɵɵtext(5, \"Tasks by Status\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 2);\n          i0.ɵɵelement(7, \"canvas\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(8, \"h2\");\n          i0.ɵɵtext(9, \"Tasks by Start and Planned End Dates\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\", 1)(11, \"h3\");\n          i0.ɵɵtext(12, \"Tasks by Dates\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 4);\n          i0.ɵɵelement(14, \"canvas\", 3);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"data\", ctx.pieChartData)(\"options\", ctx.pieChartOptions)(\"type\", ctx.pieChartType);\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"data\", ctx.barChartData)(\"options\", ctx.barChartOptions)(\"type\", ctx.barChartType);\n        }\n      },\n      styles: [\"\\n\\nbody[_ngcontent-%COMP%] {\\n    font-family: 'Arial', sans-serif;\\n    background-color: #f4f7f6;\\n    margin: 0;\\n    padding: 0;\\n  }\\n  \\n  .dashboard-container[_ngcontent-%COMP%] {\\n    max-width: 1200px;\\n    margin: 40px auto;\\n    padding: 30px;\\n    background-color: #ffffff;\\n    border-radius: 12px;\\n    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  .dashboard-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    text-align: center;\\n    color: #2c3e50;\\n    font-size: 28px;\\n    font-weight: 600;\\n    margin-bottom: 30px;\\n  }\\n  \\n  \\n\\n  .chart-wrapper[_ngcontent-%COMP%] {\\n    background-color: #f8f9fa;\\n    border-radius: 10px;\\n    padding: 20px;\\n    margin-bottom: 30px;\\n    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.08);\\n  }\\n  \\n  .chart-wrapper[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n    text-align: center;\\n    color: #34495e;\\n    font-size: 22px;\\n    font-weight: 500;\\n    margin-bottom: 20px;\\n  }\\n  \\n  \\n\\n  .task-by-dates-chart[_ngcontent-%COMP%] {\\n    height: 500px; \\n\\n    margin: 0 auto;\\n  }\\n  \\n  \\n\\n  .task-by-status-chart[_ngcontent-%COMP%] {\\n    height: 400px; \\n\\n    margin: 0 auto;\\n  }\\n  \\n  \\n\\n  @media (max-width: 768px) {\\n    .dashboard-container[_ngcontent-%COMP%] {\\n      padding: 20px;\\n    }\\n  \\n    .dashboard-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n      font-size: 24px;\\n    }\\n  \\n    .chart-wrapper[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n      font-size: 20px;\\n    }\\n  \\n    .task-by-dates-chart[_ngcontent-%COMP%] {\\n      height: 400px; \\n\\n    }\\n  \\n    .task-by-status-chart[_ngcontent-%COMP%] {\\n      height: 300px; \\n\\n    }\\n  }\\n  \\n  @media (max-width: 480px) {\\n    .dashboard-container[_ngcontent-%COMP%] {\\n      padding: 15px;\\n    }\\n  \\n    .dashboard-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n      font-size: 22px;\\n    }\\n  \\n    .chart-wrapper[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n      font-size: 18px;\\n    }\\n  \\n    .task-by-dates-chart[_ngcontent-%COMP%] {\\n      height: 300px; \\n\\n    }\\n  \\n    .task-by-status-chart[_ngcontent-%COMP%] {\\n      height: 250px; \\n\\n    }\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLHlCQUF5QjtBQUN6QjtJQUNJLGdDQUFnQztJQUNoQyx5QkFBeUI7SUFDekIsU0FBUztJQUNULFVBQVU7RUFDWjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixpQkFBaUI7SUFDakIsYUFBYTtJQUNiLHlCQUF5QjtJQUN6QixtQkFBbUI7SUFDbkIseUNBQXlDO0VBQzNDOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtFQUNyQjs7RUFFQSwwQkFBMEI7RUFDMUI7SUFDRSx5QkFBeUI7SUFDekIsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsMENBQTBDO0VBQzVDOztFQUVBO0lBQ0Usa0JBQWtCO0lBQ2xCLGNBQWM7SUFDZCxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtFQUNyQjs7RUFFQSxpQ0FBaUM7RUFDakM7SUFDRSxhQUFhLEVBQUUsMENBQTBDO0lBQ3pELGNBQWM7RUFDaEI7O0VBRUEseUJBQXlCO0VBQ3pCO0lBQ0UsYUFBYSxFQUFFLDBDQUEwQztJQUN6RCxjQUFjO0VBQ2hCOztFQUVBLHNCQUFzQjtFQUN0QjtJQUNFO01BQ0UsYUFBYTtJQUNmOztJQUVBO01BQ0UsZUFBZTtJQUNqQjs7SUFFQTtNQUNFLGVBQWU7SUFDakI7O0lBRUE7TUFDRSxhQUFhLEVBQUUsc0NBQXNDO0lBQ3ZEOztJQUVBO01BQ0UsYUFBYSxFQUFFLHNDQUFzQztJQUN2RDtFQUNGOztFQUVBO0lBQ0U7TUFDRSxhQUFhO0lBQ2Y7O0lBRUE7TUFDRSxlQUFlO0lBQ2pCOztJQUVBO01BQ0UsZUFBZTtJQUNqQjs7SUFFQTtNQUNFLGFBQWEsRUFBRSxxQ0FBcUM7SUFDdEQ7O0lBRUE7TUFDRSxhQUFhLEVBQUUscUNBQXFDO0lBQ3REO0VBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBHZW5lcmFsIFBhZ2UgU3R5bGluZyAqL1xyXG5ib2R5IHtcclxuICAgIGZvbnQtZmFtaWx5OiAnQXJpYWwnLCBzYW5zLXNlcmlmO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y0ZjdmNjtcclxuICAgIG1hcmdpbjogMDtcclxuICAgIHBhZGRpbmc6IDA7XHJcbiAgfVxyXG4gIFxyXG4gIC5kYXNoYm9hcmQtY29udGFpbmVyIHtcclxuICAgIG1heC13aWR0aDogMTIwMHB4O1xyXG4gICAgbWFyZ2luOiA0MHB4IGF1dG87XHJcbiAgICBwYWRkaW5nOiAzMHB4O1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEycHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDZweCAyMHB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICB9XHJcbiAgXHJcbiAgLmRhc2hib2FyZC1jb250YWluZXIgaDIge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6ICMyYzNlNTA7XHJcbiAgICBmb250LXNpemU6IDI4cHg7XHJcbiAgICBmb250LXdlaWdodDogNjAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICB9XHJcbiAgXHJcbiAgLyogQ2hhcnQgV3JhcHBlciBTdHlsaW5nICovXHJcbiAgLmNoYXJ0LXdyYXBwZXIge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjlmYTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjA4KTtcclxuICB9XHJcbiAgXHJcbiAgLmNoYXJ0LXdyYXBwZXIgaDMge1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgY29sb3I6ICMzNDQ5NWU7XHJcbiAgICBmb250LXNpemU6IDIycHg7XHJcbiAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLyogVGFzayBieSBEYXRlcyBDaGFydCAoQmlnZ2VyKSAqL1xyXG4gIC50YXNrLWJ5LWRhdGVzLWNoYXJ0IHtcclxuICAgIGhlaWdodDogNTAwcHg7IC8qIEluY3JlYXNlIGhlaWdodCBmb3IgYmV0dGVyIHZpc2liaWxpdHkgKi9cclxuICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gIH1cclxuICBcclxuICAvKiBUYXNrIGJ5IFN0YXR1cyBDaGFydCAqL1xyXG4gIC50YXNrLWJ5LXN0YXR1cy1jaGFydCB7XHJcbiAgICBoZWlnaHQ6IDQwMHB4OyAvKiBTbGlnaHRseSBzbWFsbGVyIHRoYW4gdGhlIGRhdGVzIGNoYXJ0ICovXHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICB9XHJcbiAgXHJcbiAgLyogUmVzcG9uc2l2ZSBEZXNpZ24gKi9cclxuICBAbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAgIC5kYXNoYm9hcmQtY29udGFpbmVyIHtcclxuICAgICAgcGFkZGluZzogMjBweDtcclxuICAgIH1cclxuICBcclxuICAgIC5kYXNoYm9hcmQtY29udGFpbmVyIGgyIHtcclxuICAgICAgZm9udC1zaXplOiAyNHB4O1xyXG4gICAgfVxyXG4gIFxyXG4gICAgLmNoYXJ0LXdyYXBwZXIgaDMge1xyXG4gICAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAudGFzay1ieS1kYXRlcy1jaGFydCB7XHJcbiAgICAgIGhlaWdodDogNDAwcHg7IC8qIEFkanVzdCBoZWlnaHQgZm9yIHNtYWxsZXIgc2NyZWVucyAqL1xyXG4gICAgfVxyXG4gIFxyXG4gICAgLnRhc2stYnktc3RhdHVzLWNoYXJ0IHtcclxuICAgICAgaGVpZ2h0OiAzMDBweDsgLyogQWRqdXN0IGhlaWdodCBmb3Igc21hbGxlciBzY3JlZW5zICovXHJcbiAgICB9XHJcbiAgfVxyXG4gIFxyXG4gIEBtZWRpYSAobWF4LXdpZHRoOiA0ODBweCkge1xyXG4gICAgLmRhc2hib2FyZC1jb250YWluZXIge1xyXG4gICAgICBwYWRkaW5nOiAxNXB4O1xyXG4gICAgfVxyXG4gIFxyXG4gICAgLmRhc2hib2FyZC1jb250YWluZXIgaDIge1xyXG4gICAgICBmb250LXNpemU6IDIycHg7XHJcbiAgICB9XHJcbiAgXHJcbiAgICAuY2hhcnQtd3JhcHBlciBoMyB7XHJcbiAgICAgIGZvbnQtc2l6ZTogMThweDtcclxuICAgIH1cclxuICBcclxuICAgIC50YXNrLWJ5LWRhdGVzLWNoYXJ0IHtcclxuICAgICAgaGVpZ2h0OiAzMDBweDsgLyogQWRqdXN0IGhlaWdodCBmb3IgbW9iaWxlIHNjcmVlbnMgKi9cclxuICAgIH1cclxuICBcclxuICAgIC50YXNrLWJ5LXN0YXR1cy1jaGFydCB7XHJcbiAgICAgIGhlaWdodDogMjUwcHg7IC8qIEFkanVzdCBoZWlnaHQgZm9yIG1vYmlsZSBzY3JlZW5zICovXHJcbiAgICB9XHJcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["DashboardComponent","constructor","taskService","pieChartData","labels","datasets","data","backgroundColor","pieChartType","pieChartOptions","responsive","plugins","legend","position","barChartData","barChartType","barChartOptions","scales","x","stacked","y","beginAtZero","ngOnInit","fetchTasks","getAllTasks","subscribe","next","tasks","updatePieChartData","updateBarChartData","error","err","console","statusCounts","forEach","task","status","hasOwnProperty","Object","keys","values","dateLabels","startDateCounts","plannedEndDateCounts","startDate","Date","toLocaleDateString","includes","push","planned_end_date","plannedEndDate","sort","a","b","getTime","date","startDateCount","filter","length","plannedEndDateCount","label","i0","ɵɵdirectiveInject","i1","TaskControllerService","selectors","decls","vars","consts","template","DashboardComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵproperty"],"sources":["C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\pages\\dashboard\\dashboard.component.ts","C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\pages\\dashboard\\dashboard.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { ChartConfiguration, ChartData, ChartOptions } from 'chart.js';\r\nimport { Task } from 'src/app/services1/models'; // Adjust the import path\r\nimport { TaskControllerService } from 'src/app/services1/services';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  pieChartData: ChartData<'pie', number[], string> = {\r\n    labels: [],\r\n    datasets: [{\r\n      data: [],\r\n      backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']\r\n    }]\r\n  };\r\n\r\n  pieChartType: ChartConfiguration<'pie'>['type'] = 'pie';\r\n\r\n  pieChartOptions: ChartOptions<'pie'> = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n\r\n  barChartData: ChartData<'bar'> = {\r\n    labels: [],\r\n    datasets: []\r\n  };\r\n\r\n  barChartType: ChartConfiguration<'bar'>['type'] = 'bar';\r\n\r\n  barChartOptions: ChartOptions<'bar'> = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        stacked: true,\r\n      },\r\n      y: {\r\n        stacked: true,\r\n        beginAtZero: true\r\n      }\r\n    },\r\n    plugins: {\r\n      legend: {\r\n        position: 'top',\r\n      },\r\n    },\r\n  };\r\n\r\n  constructor(private taskService: TaskControllerService) {}\r\n\r\n  ngOnInit(): void {\r\n    this.fetchTasks();\r\n  }\r\n\r\n  fetchTasks(): void {\r\n    this.taskService.getAllTasks().subscribe({\r\n      next: (tasks: Task[]) => {\r\n        this.updatePieChartData(tasks);\r\n        this.updateBarChartData(tasks);\r\n      },\r\n      error: (err) => {\r\n        console.error('Failed to fetch tasks:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  updatePieChartData(tasks: Task[]): void {\r\n    const statusCounts: Record<string, number> = {\r\n      'TO_DO': 0,\r\n      'PENDING': 0,\r\n      'IN_PROGRESS': 0,\r\n      'COMPLETED': 0\r\n    };\r\n\r\n    tasks.forEach(task => {\r\n      if (task.status && statusCounts.hasOwnProperty(task.status)) {\r\n        statusCounts[task.status]++;\r\n      }\r\n    });\r\n\r\n    this.pieChartData = {\r\n      labels: Object.keys(statusCounts),\r\n      datasets: [{\r\n        data: Object.values(statusCounts),\r\n        backgroundColor: ['#FF6384', '#36A2EB', '#FFCE56', '#4BC0C0']\r\n      }]\r\n    };\r\n  }\r\n\r\n  updateBarChartData(tasks: Task[]): void {\r\n    const dateLabels: string[] = [];\r\n    const startDateCounts: number[] = [];\r\n    const plannedEndDateCounts: number[] = [];\r\n\r\n    tasks.forEach(task => {\r\n      if (task.startDate) {\r\n        const startDate = new Date(task.startDate).toLocaleDateString();\r\n        if (!dateLabels.includes(startDate)) {\r\n          dateLabels.push(startDate);\r\n        }\r\n      }\r\n      if (task.planned_end_date) {\r\n        const plannedEndDate = new Date(task.planned_end_date).toLocaleDateString();\r\n        if (!dateLabels.includes(plannedEndDate)) {\r\n          dateLabels.push(plannedEndDate);\r\n        }\r\n      }\r\n    });\r\n\r\n    dateLabels.sort((a, b) => new Date(a).getTime() - new Date(b).getTime());\r\n\r\n    dateLabels.forEach(date => {\r\n      const startDateCount = tasks.filter(task => task.startDate && new Date(task.startDate).toLocaleDateString() === date).length;\r\n      const plannedEndDateCount = tasks.filter(task => task.planned_end_date && new Date(task.planned_end_date).toLocaleDateString() === date).length;\r\n\r\n      startDateCounts.push(startDateCount);\r\n      plannedEndDateCounts.push(plannedEndDateCount);\r\n    });\r\n\r\n    this.barChartData = {\r\n      labels: dateLabels,\r\n      datasets: [\r\n        {\r\n          label: 'Start Date',\r\n          data: startDateCounts,\r\n          backgroundColor: '#36A2EB'\r\n        },\r\n        {\r\n          label: 'Planned End Date',\r\n          data: plannedEndDateCounts,\r\n          backgroundColor: '#FFCE56'\r\n        }\r\n      ]\r\n    };\r\n  }\r\n}","<div class=\"dashboard-container\">\r\n    <h2>Task Status Distribution</h2>\r\n    <div class=\"chart-wrapper\">\r\n      <h3>Tasks by Status</h3>\r\n      <div class=\"task-by-status-chart\">\r\n        <canvas baseChart\r\n                [data]=\"pieChartData\"\r\n                [options]=\"pieChartOptions\"\r\n                [type]=\"pieChartType\">\r\n        </canvas>\r\n      </div>\r\n    </div>\r\n  \r\n    <h2>Tasks by Start and Planned End Dates</h2>\r\n    <div class=\"chart-wrapper\">\r\n      <h3>Tasks by Dates</h3>\r\n      <div class=\"task-by-dates-chart\">\r\n        <canvas baseChart\r\n                [data]=\"barChartData\"\r\n                [options]=\"barChartOptions\"\r\n                [type]=\"barChartType\">\r\n        </canvas>\r\n      </div>\r\n    </div>\r\n  </div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}