{"ast":null,"code":"import { catchError, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class SupplierService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:8095/api/suppliers';\n    this.materialResourceUrl = 'http://localhost:8095/api/suppliers/material-resources';\n    this.predictionUrl = 'http://localhost:8095/prediction/supplier_prediction';\n  }\n  getSuppliers() {\n    return this.http.get(this.apiUrl);\n  }\n  getSupplierById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  deleteSupplier(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  updateSupplier(id, supplier) {\n    return this.http.put(`${this.apiUrl}/${id}`, supplier);\n  }\n  createSupplier(supplierData) {\n    return this.http.post(this.apiUrl, supplierData);\n  }\n  getAllMaterialResources() {\n    return this.http.get(this.materialResourceUrl);\n  }\n  incrementClickCount(id) {\n    return this.http.put(`${this.apiUrl}/${id}/increment-click`, {});\n  }\n  getTopSuppliers() {\n    return this.http.get(`${this.apiUrl}/top-suppliers`);\n  }\n  ////\n  getSummary() {\n    return this.http.get('http://localhost:8095/api/suppliers/summary').pipe(tap(() => console.log('Fetching supplier summary')), catchError(error => {\n      console.error('API Error:', error);\n      throw error; // Re-throw to handle in component\n    }));\n  }\n\n  analyzeSentiment(text) {\n    return this.http.post(`${this.apiUrl}/analyze-sentiment`, {\n      text\n    });\n  }\n  getSupplierStatusBreakdown() {\n    return this.http.get('http://localhost:8095/api/suppliers/status-breakdown'); // Corrected URL\n  }\n  // New method to fetch category breakdown\n  getSupplierCategoryBreakdown() {\n    return this.http.get(`${this.apiUrl}/category-breakdown`);\n  }\n  // Update the method to accept a plain object instead of Supplier\n  getPredictionForSupplier(supplierData) {\n    console.log('Sending request with data:', supplierData); // Debug log\n    return this.http.post(this.predictionUrl, supplierData);\n  }\n  static {\n    this.ɵfac = function SupplierService_Factory(t) {\n      return new (t || SupplierService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: SupplierService,\n      factory: SupplierService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["catchError","tap","SupplierService","constructor","http","apiUrl","materialResourceUrl","predictionUrl","getSuppliers","get","getSupplierById","id","deleteSupplier","delete","updateSupplier","supplier","put","createSupplier","supplierData","post","getAllMaterialResources","incrementClickCount","getTopSuppliers","getSummary","pipe","console","log","error","analyzeSentiment","text","getSupplierStatusBreakdown","getSupplierCategoryBreakdown","getPredictionForSupplier","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\service-arij\\supplier.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, catchError, tap } from 'rxjs';\r\nimport { Supplier, MaterialResource } from '../models/supplier.model';\r\n\r\n////\r\nexport interface SupplierSummary {\r\n  totalSuppliers: number;\r\n  activeSuppliers: number;\r\n  inactiveSuppliers: number;\r\n  newSuppliersThisMonth: number;\r\n}/////\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SupplierService {\r\n  private apiUrl = 'http://localhost:8095/api/suppliers';\r\n  private materialResourceUrl = 'http://localhost:8095/api/suppliers/material-resources';\r\n  private predictionUrl = 'http://localhost:8095/prediction/supplier_prediction';\r\n\r\n  constructor(private http: HttpClient) {}\r\n\r\n  getSuppliers(): Observable<Supplier[]> {\r\n    return this.http.get<Supplier[]>(this.apiUrl);\r\n  }\r\n\r\n  getSupplierById(id: number): Observable<Supplier> {\r\n    return this.http.get<Supplier>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  deleteSupplier(id: number): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n\r\n  updateSupplier(id: number, supplier: Supplier): Observable<Supplier> {\r\n    return this.http.put<Supplier>(`${this.apiUrl}/${id}`, supplier);\r\n  }\r\n\r\n  createSupplier(supplierData: any): Observable<Supplier> {\r\n    return this.http.post<Supplier>(this.apiUrl, supplierData);\r\n  }\r\n  \r\n  \r\n\r\n  getAllMaterialResources(): Observable<MaterialResource[]> {\r\n    return this.http.get<MaterialResource[]>(this.materialResourceUrl);\r\n  }\r\n\r\n  incrementClickCount(id: number): Observable<void> {\r\n    return this.http.put<void>(`${this.apiUrl}/${id}/increment-click`, {});\r\n  }\r\n  \r\n\r\n  getTopSuppliers(): Observable<Supplier[]> {\r\n    return this.http.get<Supplier[]>(`${this.apiUrl}/top-suppliers`);\r\n  }\r\n  \r\n\r\n  ////\r\n  getSummary(): Observable<SupplierSummary> {\r\n    return this.http.get<SupplierSummary>('http://localhost:8095/api/suppliers/summary').pipe(\r\n      tap(() => console.log('Fetching supplier summary')),\r\n      catchError(error => {\r\n        console.error('API Error:', error);\r\n        throw error; // Re-throw to handle in component\r\n      })\r\n    );\r\n\r\n  \r\n  }\r\n  analyzeSentiment(text: string): Observable<{ sentiment: string }> {\r\n    return this.http.post<{ sentiment: string }>(\r\n      `${this.apiUrl}/analyze-sentiment`,\r\n      { text }\r\n    );\r\n  }\r\n\r\n\r\n  getSupplierStatusBreakdown(): Observable<any> {\r\n    return this.http.get<any>('http://localhost:8095/api/suppliers/status-breakdown');  // Corrected URL\r\n  }\r\n  \r\n  \r\n   // New method to fetch category breakdown\r\n   getSupplierCategoryBreakdown(): Observable<any> {\r\n    return this.http.get<any>(`${this.apiUrl}/category-breakdown`);\r\n  }\r\n\r\n\r\n  // Update the method to accept a plain object instead of Supplier\r\n  getPredictionForSupplier(supplierData: any): Observable<any> {\r\n    console.log('Sending request with data:', supplierData);  // Debug log\r\n\r\n    return this.http.post<any>(this.predictionUrl, supplierData);\r\n  }\r\n\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}