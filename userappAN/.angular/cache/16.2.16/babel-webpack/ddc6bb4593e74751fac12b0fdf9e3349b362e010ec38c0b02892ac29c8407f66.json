{"ast":null,"code":"import 'dhtmlx-gantt'; // Import the Gantt library\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services1/services\";\nfunction GanttChartListComponent_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 8);\n    i0.ɵɵlistener(\"click\", function GanttChartListComponent_li_6_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const chart_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.renderGanttChart(chart_r4));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chart_r4 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵclassProp(\"active\", (ctx_r0.selectedGanttChart == null ? null : ctx_r0.selectedGanttChart.id) === chart_r4.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\" \", chart_r4.taskName, \" (\", i0.ɵɵpipeBind2(2, 5, chart_r4.startDate, \"shortDate\"), \" - \", i0.ɵɵpipeBind2(3, 8, chart_r4.endDate, \"shortDate\"), \") \");\n  }\n}\nfunction GanttChartListComponent_h3_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h3\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Selected Gantt Chart: \", ctx_r1.selectedGanttChart.taskName, \"\");\n  }\n}\nfunction GanttChartListComponent_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1, \"No tasks available.\");\n    i0.ɵɵelementEnd();\n  }\n}\nexport class GanttChartListComponent {\n  constructor(ganttChartService) {\n    this.ganttChartService = ganttChartService;\n    this.ganttCharts = []; // List of all Gantt charts\n    this.selectedGanttChart = null; // Currently selected Gantt chart\n  }\n  // Initialize the Gantt chart after the view is loaded\n  ngAfterViewInit() {\n    this.initializeGantt();\n  }\n  // Fetch all Gantt charts when the component initializes\n  ngOnInit() {\n    this.loadGanttCharts();\n  }\n  // Fetch all Gantt charts from the backend\n  loadGanttCharts() {\n    this.ganttChartService.getAllGanttCharts().subscribe({\n      next: response => {\n        this.ganttCharts = response;\n        console.log('Gantt charts loaded successfully:', this.ganttCharts);\n      },\n      error: error => {\n        console.error('Error fetching Gantt charts:', error);\n        alert('Failed to load Gantt charts. Please try again.');\n      }\n    });\n  }\n  // Initialize the Gantt chart\n  initializeGantt() {\n    const ganttContainer = document.getElementById('gantt-container');\n    if (ganttContainer) {\n      gantt.init(ganttContainer);\n    } else {\n      console.warn('Gantt container not found in the DOM.');\n    }\n  }\n  renderGanttChart(ganttChart) {\n    if (!ganttChart || !ganttChart.tasks || ganttChart.tasks.length === 0) {\n      console.warn('No tasks found in the selected Gantt chart.');\n      alert('No tasks available in this Gantt chart.');\n      return;\n    }\n    // Clear the existing Gantt chart\n    gantt.clearAll();\n    // Parse and render the tasks\n    gantt.parse({\n      data: ganttChart.tasks.map(task => ({\n        id: task.idTask,\n        text: task.name,\n        start_date: this.convertToGanttDateFormat(task.startDate || ''),\n        duration: this.calculateDuration(task.startDate || '', task.planned_end_date || ''),\n        progress: this.calculateProgress(task.status ?? 'PENDING'),\n        dependencies: []\n      }))\n    });\n    // Set the selected Gantt chart\n    this.selectedGanttChart = ganttChart;\n  }\n  convertToGanttDateFormat(date) {\n    if (!date) return '';\n    let parsedDate;\n    // Handle Date object\n    if (date instanceof Date) {\n      parsedDate = date;\n    }\n    // Handle ISO string\n    else if (typeof date === 'string') {\n      parsedDate = new Date(date);\n    }\n    // Handle timestamp (number)\n    else if (typeof date === 'number') {\n      parsedDate = new Date(date);\n    }\n    // Invalid date\n    else {\n      console.error('Invalid date format:', date);\n      return '';\n    }\n    if (isNaN(parsedDate.getTime())) {\n      console.error('Invalid date:', date);\n      return '';\n    }\n    const day = parsedDate.getDate().toString().padStart(2, '0');\n    const month = (parsedDate.getMonth() + 1).toString().padStart(2, '0');\n    const year = parsedDate.getFullYear();\n    return `${day}-${month}-${year}`;\n  }\n  // Calculate duration between two dates in days\n  calculateDuration(startDate, endDate) {\n    if (!startDate || !endDate) return 0;\n    const start = new Date(startDate);\n    const end = new Date(endDate);\n    return (end.getTime() - start.getTime()) / (1000 * 3600 * 24); // Duration in days\n  }\n  // Calculate progress based on task status\n  calculateProgress(status) {\n    if (status === 'COMPLETED') return 1; // 100% progress\n    if (status === 'IN_PROGRESS') return 0.5; // 50% progress\n    return 0; // 0% progress\n  }\n\n  static {\n    this.ɵfac = function GanttChartListComponent_Factory(t) {\n      return new (t || GanttChartListComponent)(i0.ɵɵdirectiveInject(i1.GanttChartControllerService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: GanttChartListComponent,\n      selectors: [[\"app-gantt-chart-list\"]],\n      decls: 12,\n      vars: 2,\n      consts: [[1, \"background-container\"], [1, \"gantt-chart-list\"], [1, \"chart-list\"], [3, \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"gantt-container\"], [4, \"ngIf\"], [\"id\", \"gantt-container\", 2, \"width\", \"100%\", \"height\", \"500px\", \"overflow\", \"hidden\"], [\"noTasks\", \"\"], [3, \"click\"]],\n      template: function GanttChartListComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"h3\");\n          i0.ɵɵtext(4, \"Gantt Charts\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"ul\");\n          i0.ɵɵtemplate(6, GanttChartListComponent_li_6_Template, 4, 11, \"li\", 3);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 4);\n          i0.ɵɵtemplate(8, GanttChartListComponent_h3_8_Template, 2, 1, \"h3\", 5);\n          i0.ɵɵelement(9, \"div\", 6);\n          i0.ɵɵtemplate(10, GanttChartListComponent_ng_template_10_Template, 2, 0, \"ng-template\", null, 7, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngForOf\", ctx.ganttCharts);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.selectedGanttChart);\n        }\n      },\n      styles: [\"\\n\\n.background-container[_ngcontent-%COMP%] {\\n  background-image: linear-gradient(rgba(40, 42, 55, 0.9), rgba(40, 42, 55, 0.9)), url('v.jpg');\\n  background-size: cover;\\n  background-repeat: no-repeat;\\n  background-attachment: fixed;\\n  background-position: center;\\n  min-height: 100vh;\\n  padding: 40px 20px;\\n  color: #ffffff;\\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\\n}\\n\\n\\n\\n.gantt-chart-list[_ngcontent-%COMP%] {\\n  display: flex;\\n  gap: 30px;\\n  max-width: 1400px;\\n  margin: 0 auto;\\n  background-color: rgba(255, 255, 255, 0.1);\\n  border-radius: 12px;\\n  padding: 20px;\\n  -webkit-backdrop-filter: blur(10px);\\n          backdrop-filter: blur(10px);\\n  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);\\n}\\n\\n\\n\\n.chart-list[_ngcontent-%COMP%] {\\n  flex: 1;\\n  background-color: rgba(255, 255, 255, 0.1);\\n  padding: 20px;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\\n}\\n\\n.chart-list[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n  font-size: 1.5rem;\\n  color: #ffffff;\\n  font-weight: 600;\\n  border-bottom: 2px solid rgba(255, 255, 255, 0.2);\\n  padding-bottom: 10px;\\n  margin-bottom: 20px;\\n}\\n\\n.chart-list[_ngcontent-%COMP%]   ul[_ngcontent-%COMP%] {\\n  list-style-type: none;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.chart-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n  padding: 12px;\\n  margin: 12px 0;\\n  background-color: rgba(255, 255, 255, 0.2);\\n  border-radius: 6px;\\n  cursor: pointer;\\n  transition: all 0.3s ease;\\n  font-size: 0.95rem;\\n  color: #ffffff;\\n}\\n\\n.chart-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%]:hover {\\n  background-color: rgba(255, 255, 255, 0.3);\\n  transform: translateX(5px);\\n}\\n\\n.chart-list[_ngcontent-%COMP%]   li.active[_ngcontent-%COMP%] {\\n  background-color: rgba(255, 255, 255, 0.4);\\n  font-weight: 600;\\n  border-left: 4px solid #4caf50;\\n}\\n\\n\\n\\n.gantt-container[_ngcontent-%COMP%] {\\n  flex: 3;\\n  background-color: rgba(255, 255, 255, 0.1);\\n  padding: 20px;\\n  border-radius: 8px;\\n  box-shadow: 0 4px 16px rgba(0, 0, 0, 0.1);\\n  overflow: hidden; \\n\\n}\\n\\n.gantt-container[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin-top: 0;\\n  font-size: 1.5rem;\\n  color: #ffffff;\\n  font-weight: 600;\\n  border-bottom: 2px solid rgba(255, 255, 255, 0.2);\\n  padding-bottom: 10px;\\n  margin-bottom: 20px;\\n}\\n\\n#gantt-container[_ngcontent-%COMP%] {\\n  background-color: rgba(255, 255, 255, 0.2);\\n  border-radius: 8px;\\n  margin-top: 20px;\\n  padding: 20px;\\n  transition: all 0.3s ease;\\n  width: 100%; \\n\\n  height: 500px; \\n\\n  overflow: auto; \\n\\n}\\n\\n#gantt-container[_ngcontent-%COMP%]:hover {\\n  box-shadow: 0 8px 24px rgba(0, 0, 0, 0.3);\\n}\\n\\n\\n\\n.no-tasks[_ngcontent-%COMP%] {\\n  color: rgba(255, 255, 255, 0.7);\\n  font-style: italic;\\n  text-align: center;\\n  margin-top: 20px;\\n  font-size: 1rem;\\n}\\n\\n\\n\\n@media (max-width: 768px) {\\n  .gantt-chart-list[_ngcontent-%COMP%] {\\n    flex-direction: column;\\n    gap: 20px;\\n    padding: 15px;\\n  }\\n\\n  .chart-list[_ngcontent-%COMP%], .gantt-container[_ngcontent-%COMP%] {\\n    flex: none;\\n    width: 100%;\\n  }\\n\\n  .chart-list[_ngcontent-%COMP%]   li[_ngcontent-%COMP%] {\\n    font-size: 0.9rem;\\n    padding: 10px;\\n  }\\n\\n  .gantt-container[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n    font-size: 1.3rem;\\n  }\\n\\n  #gantt-container[_ngcontent-%COMP%] {\\n    height: 400px;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvZ2FudHQtY2hhcnQtbGlzdC9nYW50dC1jaGFydC1saXN0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsNkNBQTZDO0FBQzdDO0VBQ0UsNkZBQStHO0VBQy9HLHNCQUFzQjtFQUN0Qiw0QkFBNEI7RUFDNUIsNEJBQTRCO0VBQzVCLDJCQUEyQjtFQUMzQixpQkFBaUI7RUFDakIsa0JBQWtCO0VBQ2xCLGNBQWM7RUFDZCw0REFBNEQ7QUFDOUQ7O0FBRUEsZ0RBQWdEO0FBQ2hEO0VBQ0UsYUFBYTtFQUNiLFNBQVM7RUFDVCxpQkFBaUI7RUFDakIsY0FBYztFQUNkLDBDQUEwQztFQUMxQyxtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLG1DQUEyQjtVQUEzQiwyQkFBMkI7RUFDM0IseUNBQXlDO0FBQzNDOztBQUVBLDRCQUE0QjtBQUM1QjtFQUNFLE9BQU87RUFDUCwwQ0FBMEM7RUFDMUMsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQix5Q0FBeUM7QUFDM0M7O0FBRUE7RUFDRSxhQUFhO0VBQ2IsaUJBQWlCO0VBQ2pCLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsaURBQWlEO0VBQ2pELG9CQUFvQjtFQUNwQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsVUFBVTtFQUNWLFNBQVM7QUFDWDs7QUFFQTtFQUNFLGFBQWE7RUFDYixjQUFjO0VBQ2QsMENBQTBDO0VBQzFDLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YseUJBQXlCO0VBQ3pCLGtCQUFrQjtFQUNsQixjQUFjO0FBQ2hCOztBQUVBO0VBQ0UsMENBQTBDO0VBQzFDLDBCQUEwQjtBQUM1Qjs7QUFFQTtFQUNFLDBDQUEwQztFQUMxQyxnQkFBZ0I7RUFDaEIsOEJBQThCO0FBQ2hDOztBQUVBLHdDQUF3QztBQUN4QztFQUNFLE9BQU87RUFDUCwwQ0FBMEM7RUFDMUMsYUFBYTtFQUNiLGtCQUFrQjtFQUNsQix5Q0FBeUM7RUFDekMsZ0JBQWdCLEVBQUUsNENBQTRDO0FBQ2hFOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGlCQUFpQjtFQUNqQixjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLGlEQUFpRDtFQUNqRCxvQkFBb0I7RUFDcEIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsMENBQTBDO0VBQzFDLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixXQUFXLEVBQUUsK0JBQStCO0VBQzVDLGFBQWEsRUFBRSxpQkFBaUI7RUFDaEMsY0FBYyxFQUFFLHdDQUF3QztBQUMxRDs7QUFFQTtFQUNFLHlDQUF5QztBQUMzQzs7QUFFQSw2QkFBNkI7QUFDN0I7RUFDRSwrQkFBK0I7RUFDL0Isa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZUFBZTtBQUNqQjs7QUFFQSwwQ0FBMEM7QUFDMUM7RUFDRTtJQUNFLHNCQUFzQjtJQUN0QixTQUFTO0lBQ1QsYUFBYTtFQUNmOztFQUVBOztJQUVFLFVBQVU7SUFDVixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxpQkFBaUI7SUFDakIsYUFBYTtFQUNmOztFQUVBO0lBQ0UsaUJBQWlCO0VBQ25COztFQUVBO0lBQ0UsYUFBYTtFQUNmO0FBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBCYXNlIHN0eWxlcyBmb3IgdGhlIGJhY2tncm91bmQgY29udGFpbmVyICovXHJcbi5iYWNrZ3JvdW5kLWNvbnRhaW5lciB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHJnYmEoNDAsIDQyLCA1NSwgMC45KSwgcmdiYSg0MCwgNDIsIDU1LCAwLjkpKSwgdXJsKCdzcmMvYXNzZXRzL2ltYWdlcy92LmpwZycpO1xyXG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLWF0dGFjaG1lbnQ6IGZpeGVkO1xyXG4gIGJhY2tncm91bmQtcG9zaXRpb246IGNlbnRlcjtcclxuICBtaW4taGVpZ2h0OiAxMDB2aDtcclxuICBwYWRkaW5nOiA0MHB4IDIwcHg7XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcbiAgZm9udC1mYW1pbHk6ICdTZWdvZSBVSScsIFRhaG9tYSwgR2VuZXZhLCBWZXJkYW5hLCBzYW5zLXNlcmlmO1xyXG59XHJcblxyXG4vKiBGbGV4IGNvbnRhaW5lciBmb3IgdGhlIEdhbnR0IGNoYXJ0IGFuZCBsaXN0ICovXHJcbi5nYW50dC1jaGFydC1saXN0IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGdhcDogMzBweDtcclxuICBtYXgtd2lkdGg6IDE0MDBweDtcclxuICBtYXJnaW46IDAgYXV0bztcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XHJcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJhY2tkcm9wLWZpbHRlcjogYmx1cigxMHB4KTtcclxuICBib3gtc2hhZG93OiAwIDhweCAzMnB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcclxufVxyXG5cclxuLyogTGVmdCBjb2x1bW46IENoYXJ0IGxpc3QgKi9cclxuLmNoYXJ0LWxpc3Qge1xyXG4gIGZsZXg6IDE7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xyXG4gIGJveC1zaGFkb3c6IDAgNHB4IDE2cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG59XHJcblxyXG4uY2hhcnQtbGlzdCBoMyB7XHJcbiAgbWFyZ2luLXRvcDogMDtcclxuICBmb250LXNpemU6IDEuNXJlbTtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XHJcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuLmNoYXJ0LWxpc3QgdWwge1xyXG4gIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTtcclxuICBwYWRkaW5nOiAwO1xyXG4gIG1hcmdpbjogMDtcclxufVxyXG5cclxuLmNoYXJ0LWxpc3QgbGkge1xyXG4gIHBhZGRpbmc6IDEycHg7XHJcbiAgbWFyZ2luOiAxMnB4IDA7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuICBmb250LXNpemU6IDAuOTVyZW07XHJcbiAgY29sb3I6ICNmZmZmZmY7XHJcbn1cclxuXHJcbi5jaGFydC1saXN0IGxpOmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMyk7XHJcbiAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDVweCk7XHJcbn1cclxuXHJcbi5jaGFydC1saXN0IGxpLmFjdGl2ZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQpO1xyXG4gIGZvbnQtd2VpZ2h0OiA2MDA7XHJcbiAgYm9yZGVyLWxlZnQ6IDRweCBzb2xpZCAjNGNhZjUwO1xyXG59XHJcblxyXG4vKiBSaWdodCBjb2x1bW46IEdhbnR0IGNoYXJ0IGNvbnRhaW5lciAqL1xyXG4uZ2FudHQtY29udGFpbmVyIHtcclxuICBmbGV4OiAzO1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBib3gtc2hhZG93OiAwIDRweCAxNnB4IHJnYmEoMCwgMCwgMCwgMC4xKTtcclxuICBvdmVyZmxvdzogaGlkZGVuOyAvKiBFbnN1cmUgdGhlIEdhbnR0IGNoYXJ0IGRvZXNuJ3Qgb3ZlcmZsb3cgKi9cclxufVxyXG5cclxuLmdhbnR0LWNvbnRhaW5lciBoMyB7XHJcbiAgbWFyZ2luLXRvcDogMDtcclxuICBmb250LXNpemU6IDEuNXJlbTtcclxuICBjb2xvcjogI2ZmZmZmZjtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XHJcbiAgcGFkZGluZy1ib3R0b206IDEwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxufVxyXG5cclxuI2dhbnR0LWNvbnRhaW5lciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjIpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIHBhZGRpbmc6IDIwcHg7XHJcbiAgdHJhbnNpdGlvbjogYWxsIDAuM3MgZWFzZTtcclxuICB3aWR0aDogMTAwJTsgLyogRW5zdXJlIGl0IHRha2VzIGZ1bGwgd2lkdGggKi9cclxuICBoZWlnaHQ6IDUwMHB4OyAvKiBGaXhlZCBoZWlnaHQgKi9cclxuICBvdmVyZmxvdzogYXV0bzsgLyogQWRkIHNjcm9sbGJhcnMgaWYgY29udGVudCBvdmVyZmxvd3MgKi9cclxufVxyXG5cclxuI2dhbnR0LWNvbnRhaW5lcjpob3ZlciB7XHJcbiAgYm94LXNoYWRvdzogMCA4cHggMjRweCByZ2JhKDAsIDAsIDAsIDAuMyk7XHJcbn1cclxuXHJcbi8qIFBsYWNlaG9sZGVyIGZvciBubyB0YXNrcyAqL1xyXG4ubm8tdGFza3Mge1xyXG4gIGNvbG9yOiByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuNyk7XHJcbiAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICBtYXJnaW4tdG9wOiAyMHB4O1xyXG4gIGZvbnQtc2l6ZTogMXJlbTtcclxufVxyXG5cclxuLyogUmVzcG9uc2l2ZSBkZXNpZ24gZm9yIHNtYWxsZXIgc2NyZWVucyAqL1xyXG5AbWVkaWEgKG1heC13aWR0aDogNzY4cHgpIHtcclxuICAuZ2FudHQtY2hhcnQtbGlzdCB7XHJcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gICAgZ2FwOiAyMHB4O1xyXG4gICAgcGFkZGluZzogMTVweDtcclxuICB9XHJcblxyXG4gIC5jaGFydC1saXN0LFxyXG4gIC5nYW50dC1jb250YWluZXIge1xyXG4gICAgZmxleDogbm9uZTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuXHJcbiAgLmNoYXJ0LWxpc3QgbGkge1xyXG4gICAgZm9udC1zaXplOiAwLjlyZW07XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gIH1cclxuXHJcbiAgLmdhbnR0LWNvbnRhaW5lciBoMyB7XHJcbiAgICBmb250LXNpemU6IDEuM3JlbTtcclxuICB9XHJcblxyXG4gICNnYW50dC1jb250YWluZXIge1xyXG4gICAgaGVpZ2h0OiA0MDBweDtcclxuICB9XHJcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n    });\n  }\n}","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵlistener","GanttChartListComponent_li_6_Template_li_click_0_listener","restoredCtx","ɵɵrestoreView","_r6","chart_r4","$implicit","ctx_r5","ɵɵnextContext","ɵɵresetView","renderGanttChart","ɵɵtext","ɵɵelementEnd","ɵɵclassProp","ctx_r0","selectedGanttChart","id","ɵɵadvance","ɵɵtextInterpolate3","taskName","ɵɵpipeBind2","startDate","endDate","ɵɵtextInterpolate1","ctx_r1","GanttChartListComponent","constructor","ganttChartService","ganttCharts","ngAfterViewInit","initializeGantt","ngOnInit","loadGanttCharts","getAllGanttCharts","subscribe","next","response","console","log","error","alert","ganttContainer","document","getElementById","gantt","init","warn","ganttChart","tasks","length","clearAll","parse","data","map","task","idTask","text","name","start_date","convertToGanttDateFormat","duration","calculateDuration","planned_end_date","progress","calculateProgress","status","dependencies","date","parsedDate","Date","isNaN","getTime","day","getDate","toString","padStart","month","getMonth","year","getFullYear","start","end","ɵɵdirectiveInject","i1","GanttChartControllerService","selectors","decls","vars","consts","template","GanttChartListComponent_Template","rf","ctx","ɵɵtemplate","GanttChartListComponent_li_6_Template","GanttChartListComponent_h3_8_Template","ɵɵelement","GanttChartListComponent_ng_template_10_Template","ɵɵtemplateRefExtractor","ɵɵproperty"],"sources":["C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\pages\\gantt-chart-list\\gantt-chart-list.component.ts","C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\pages\\gantt-chart-list\\gantt-chart-list.component.html"],"sourcesContent":["import { Component, OnInit, AfterViewInit } from '@angular/core';\r\nimport { GanttChartControllerService } from 'src/app/services1/services';\r\nimport 'dhtmlx-gantt'; // Import the Gantt library\r\nimport { GanttChart } from 'src/app/services1/models';\r\ndeclare const gantt: any; // Declare the Gantt library\r\n\r\n@Component({\r\n  selector: 'app-gantt-chart-list',\r\n  templateUrl: './gantt-chart-list.component.html',\r\n  styleUrls: ['./gantt-chart-list.component.css']\r\n})\r\nexport class GanttChartListComponent implements OnInit, AfterViewInit {\r\n  ganttCharts: GanttChart[] = []; // List of all Gantt charts\r\n  selectedGanttChart: GanttChart | null = null; // Currently selected Gantt chart\r\n\r\n  constructor(private ganttChartService: GanttChartControllerService) {}\r\n\r\n  // Initialize the Gantt chart after the view is loaded\r\n  ngAfterViewInit(): void {\r\n    this.initializeGantt();\r\n  }\r\n\r\n  // Fetch all Gantt charts when the component initializes\r\n  ngOnInit(): void {\r\n    this.loadGanttCharts();\r\n  }\r\n\r\n  // Fetch all Gantt charts from the backend\r\n  loadGanttCharts(): void {\r\n    this.ganttChartService.getAllGanttCharts().subscribe({\r\n      next: (response: GanttChart[]) => {\r\n        this.ganttCharts = response;\r\n        console.log('Gantt charts loaded successfully:', this.ganttCharts);\r\n      },\r\n      error: (error) => {\r\n        console.error('Error fetching Gantt charts:', error);\r\n        alert('Failed to load Gantt charts. Please try again.');\r\n      }\r\n    });\r\n  }\r\n\r\n  // Initialize the Gantt chart\r\n  initializeGantt(): void {\r\n    const ganttContainer = document.getElementById('gantt-container');\r\n    if (ganttContainer) {\r\n      gantt.init(ganttContainer);\r\n    } else {\r\n      console.warn('Gantt container not found in the DOM.');\r\n    }\r\n  }\r\n\r\n  renderGanttChart(ganttChart: GanttChart): void {\r\n    if (!ganttChart || !ganttChart.tasks || ganttChart.tasks.length === 0) {\r\n      console.warn('No tasks found in the selected Gantt chart.');\r\n      alert('No tasks available in this Gantt chart.');\r\n      return;\r\n    }\r\n\r\n    // Clear the existing Gantt chart\r\n    gantt.clearAll();\r\n\r\n    // Parse and render the tasks\r\n    gantt.parse({\r\n      data: ganttChart.tasks.map(task => ({\r\n        id: task.idTask,\r\n        text: task.name,\r\n        start_date: this.convertToGanttDateFormat(task.startDate || ''),\r\n        duration: this.calculateDuration(task.startDate || '', task.planned_end_date || ''),\r\n        progress: this.calculateProgress(task.status ?? 'PENDING'),\r\n        dependencies: []\r\n      }))\r\n    });\r\n\r\n    // Set the selected Gantt chart\r\n    this.selectedGanttChart = ganttChart;\r\n  }\r\n\r\n  private convertToGanttDateFormat(date: string | number | Date): string {\r\n    if (!date) return '';\r\n\r\n    let parsedDate: Date;\r\n\r\n    // Handle Date object\r\n    if (date instanceof Date) {\r\n      parsedDate = date;\r\n    }\r\n    // Handle ISO string\r\n    else if (typeof date === 'string') {\r\n      parsedDate = new Date(date);\r\n    }\r\n    // Handle timestamp (number)\r\n    else if (typeof date === 'number') {\r\n      parsedDate = new Date(date);\r\n    }\r\n    // Invalid date\r\n    else {\r\n      console.error('Invalid date format:', date);\r\n      return '';\r\n    }\r\n\r\n    if (isNaN(parsedDate.getTime())) {\r\n      console.error('Invalid date:', date);\r\n      return '';\r\n    }\r\n\r\n    const day = parsedDate.getDate().toString().padStart(2, '0');\r\n    const month = (parsedDate.getMonth() + 1).toString().padStart(2, '0');\r\n    const year = parsedDate.getFullYear();\r\n\r\n    return `${day}-${month}-${year}`;\r\n  }\r\n\r\n  // Calculate duration between two dates in days\r\n  private calculateDuration(startDate: string, endDate: string): number {\r\n    if (!startDate || !endDate) return 0;\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n    return (end.getTime() - start.getTime()) / (1000 * 3600 * 24); // Duration in days\r\n  }\r\n\r\n  // Calculate progress based on task status\r\n  private calculateProgress(status: string): number {\r\n    if (status === 'COMPLETED') return 1; // 100% progress\r\n    if (status === 'IN_PROGRESS') return 0.5; // 50% progress\r\n    return 0; // 0% progress\r\n  }\r\n}","<div class=\"background-container\">\r\n  <div class=\"gantt-chart-list\">\r\n    <div class=\"chart-list\">\r\n      <h3>Gantt Charts</h3>\r\n      <ul>\r\n        <li\r\n          *ngFor=\"let chart of ganttCharts\"\r\n          (click)=\"renderGanttChart(chart)\"\r\n          [class.active]=\"selectedGanttChart?.id === chart.id\"\r\n        >\r\n          {{ chart.taskName }} ({{ chart.startDate | date: 'shortDate' }} - {{ chart.endDate | date: 'shortDate' }})\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  \r\n    <div class=\"gantt-container\">\r\n      <h3 *ngIf=\"selectedGanttChart\">Selected Gantt Chart: {{ selectedGanttChart.taskName }}</h3>\r\n  \r\n      <div\r\n        id=\"gantt-container\"\r\n        style=\"width: 100%; height: 500px; overflow: hidden;\"\r\n      ></div>\r\n  \r\n      <ng-template #noTasks>\r\n        <p>No tasks available.</p>\r\n      </ng-template>\r\n    </div>\r\n  </div>\r\n</div>  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}