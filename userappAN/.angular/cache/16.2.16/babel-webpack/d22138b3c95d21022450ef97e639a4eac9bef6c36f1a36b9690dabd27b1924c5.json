{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { TokenService } from '../token/token.service';\nexport const nonAdminGuardGuard = (route, state) => {\n  const tokenService = inject(TokenService);\n  const router = inject(Router);\n  if (!tokenService.isAuthenticated()) {\n    console.warn('üö´ No token found! Redirecting to login...');\n    router.navigate(['/login']);\n    return false;\n  }\n  const userRoles = tokenService.getUserRoles();\n  console.log('üîç Extracted Roles:', userRoles);\n  if (!userRoles.includes('ADMIN')) {\n    console.log('‚úÖ Non-admin access granted');\n    return true;\n  } else {\n    console.warn('üö∑ Admins cannot access this page! Redirecting...');\n    router.navigate(['/profile', tokenService.getUserId()]);\n    return false;\n  }\n};","map":{"version":3,"names":["inject","Router","TokenService","nonAdminGuardGuard","route","state","tokenService","router","isAuthenticated","console","warn","navigate","userRoles","getUserRoles","log","includes","getUserId"],"sources":["C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\guards\\non-admin-guard.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\r\nimport { CanActivateFn, Router } from '@angular/router';\r\nimport { TokenService } from '../token/token.service';\r\n\r\nexport const nonAdminGuardGuard: CanActivateFn = (route, state) => {\r\n  const tokenService = inject(TokenService);\r\n  const router = inject(Router);\r\n\r\n  if (!tokenService.isAuthenticated()) {\r\n    console.warn('üö´ No token found! Redirecting to login...');\r\n    router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n  const userRoles = tokenService.getUserRoles();\r\n  console.log('üîç Extracted Roles:', userRoles);\r\n\r\n  if (!userRoles.includes('ADMIN')) {\r\n    console.log('‚úÖ Non-admin access granted');\r\n    return true;\r\n  } else {\r\n    console.warn('üö∑ Admins cannot access this page! Redirecting...');\r\n    router.navigate(['/profile', tokenService.getUserId()]);\r\n    return false;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,YAAY,QAAQ,wBAAwB;AAErD,OAAO,MAAMC,kBAAkB,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EAChE,MAAMC,YAAY,GAAGN,MAAM,CAACE,YAAY,CAAC;EACzC,MAAMK,MAAM,GAAGP,MAAM,CAACC,MAAM,CAAC;EAE7B,IAAI,CAACK,YAAY,CAACE,eAAe,EAAE,EAAE;IACnCC,OAAO,CAACC,IAAI,CAAC,4CAA4C,CAAC;IAC1DH,MAAM,CAACI,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC3B,OAAO,KAAK;;EAGd,MAAMC,SAAS,GAAGN,YAAY,CAACO,YAAY,EAAE;EAC7CJ,OAAO,CAACK,GAAG,CAAC,qBAAqB,EAAEF,SAAS,CAAC;EAE7C,IAAI,CAACA,SAAS,CAACG,QAAQ,CAAC,OAAO,CAAC,EAAE;IAChCN,OAAO,CAACK,GAAG,CAAC,4BAA4B,CAAC;IACzC,OAAO,IAAI;GACZ,MAAM;IACLL,OAAO,CAACC,IAAI,CAAC,mDAAmD,CAAC;IACjEH,MAAM,CAACI,QAAQ,CAAC,CAAC,UAAU,EAAEL,YAAY,CAACU,SAAS,EAAE,CAAC,CAAC;IACvD,OAAO,KAAK;;AAEhB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}