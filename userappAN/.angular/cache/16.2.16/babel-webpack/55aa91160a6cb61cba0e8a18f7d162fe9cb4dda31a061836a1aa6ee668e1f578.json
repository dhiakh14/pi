{"ast":null,"code":"import { Observable } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CameraService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = 'http://localhost:8086/planning/camera';\n  }\n  startCamera() {\n    return this.http.post(`${this.baseUrl}/start`, {});\n  }\n  stopCamera() {\n    return this.http.post(`${this.baseUrl}/stop`, {});\n  }\n  getCameraStatus() {\n    return this.http.get(`${this.baseUrl}/status`);\n  }\n  getDetection() {\n    return this.http.get(`${this.baseUrl}`);\n  }\n  startDetectionPolling(intervalMs = 100) {\n    return new Observable(observer => {\n      const intervalId = setInterval(() => {\n        this.getDetection().subscribe({\n          next: data => observer.next(data),\n          error: err => observer.error(err)\n        });\n      }, intervalMs);\n      return () => clearInterval(intervalId);\n    });\n  }\n  static {\n    this.ɵfac = function CameraService_Factory(t) {\n      return new (t || CameraService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: CameraService,\n      factory: CameraService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["Observable","CameraService","constructor","http","baseUrl","startCamera","post","stopCamera","getCameraStatus","get","getDetection","startDetectionPolling","intervalMs","observer","intervalId","setInterval","subscribe","next","data","error","err","clearInterval","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\services\\CameraService .ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CameraService {\r\n  private baseUrl = 'http://localhost:8086/planning/camera';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  startCamera(): Observable<any> {\r\n    return this.http.post(`${this.baseUrl}/start`, {});\r\n  }\r\n\r\n  stopCamera(): Observable<any> {\r\n    return this.http.post(`${this.baseUrl}/stop`, {});\r\n  }\r\n\r\n  getCameraStatus(): Observable<{ running: boolean, ready: boolean }> {\r\n    return this.http.get<{ running: boolean, ready: boolean }>(`${this.baseUrl}/status`);\r\n  }\r\n\r\n  getDetection(): Observable<{\r\n    image?: string,\r\n    detections?: Array<{\r\n      class: string,\r\n      confidence: number,\r\n      bbox: number[]\r\n    }>,\r\n    error?: string\r\n  }> {\r\n    return this.http.get(`${this.baseUrl}`);\r\n  }\r\n\r\n  startDetectionPolling(intervalMs: number = 100): Observable<any> {\r\n    return new Observable(observer => {\r\n      const intervalId = setInterval(() => {\r\n        this.getDetection().subscribe({\r\n          next: (data) => observer.next(data),\r\n          error: (err) => observer.error(err)\r\n        });\r\n      }, intervalMs);\r\n\r\n      return () => clearInterval(intervalId);\r\n    });\r\n  }\r\n}"],"mappings":"AAEA,SAASA,UAAU,QAAQ,MAAM;;;AAKjC,OAAM,MAAOC,aAAa;EAGxBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAG,uCAAuC;EAEjB;EAExCC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACF,OAAO,QAAQ,EAAE,EAAE,CAAC;EACpD;EAEAG,UAAUA,CAAA;IACR,OAAO,IAAI,CAACJ,IAAI,CAACG,IAAI,CAAC,GAAG,IAAI,CAACF,OAAO,OAAO,EAAE,EAAE,CAAC;EACnD;EAEAI,eAAeA,CAAA;IACb,OAAO,IAAI,CAACL,IAAI,CAACM,GAAG,CAAuC,GAAG,IAAI,CAACL,OAAO,SAAS,CAAC;EACtF;EAEAM,YAAYA,CAAA;IASV,OAAO,IAAI,CAACP,IAAI,CAACM,GAAG,CAAC,GAAG,IAAI,CAACL,OAAO,EAAE,CAAC;EACzC;EAEAO,qBAAqBA,CAACC,UAAA,GAAqB,GAAG;IAC5C,OAAO,IAAIZ,UAAU,CAACa,QAAQ,IAAG;MAC/B,MAAMC,UAAU,GAAGC,WAAW,CAAC,MAAK;QAClC,IAAI,CAACL,YAAY,EAAE,CAACM,SAAS,CAAC;UAC5BC,IAAI,EAAGC,IAAI,IAAKL,QAAQ,CAACI,IAAI,CAACC,IAAI,CAAC;UACnCC,KAAK,EAAGC,GAAG,IAAKP,QAAQ,CAACM,KAAK,CAACC,GAAG;SACnC,CAAC;MACJ,CAAC,EAAER,UAAU,CAAC;MAEd,OAAO,MAAMS,aAAa,CAACP,UAAU,CAAC;IACxC,CAAC,CAAC;EACJ;;;uBAxCWb,aAAa,EAAAqB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAbxB,aAAa;MAAAyB,OAAA,EAAbzB,aAAa,CAAA0B,IAAA;MAAAC,UAAA,EAFZ;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}