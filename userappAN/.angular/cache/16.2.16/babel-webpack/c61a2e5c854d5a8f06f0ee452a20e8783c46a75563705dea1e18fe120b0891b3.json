{"ast":null,"code":"import { Chart, registerables } from 'chart.js';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/servicesAbir/services\";\nexport class ProjectStatsComponent {\n  constructor(projectService) {\n    this.projectService = projectService;\n    this.chart = null;\n    this.isLoading = true;\n    this.error = null;\n    this.statsData = null;\n    this.averageDuration = null; // Nouvelle variable pour la durée moyenne\n    Chart.register(...registerables);\n  }\n  ngOnInit() {\n    this.loadStats();\n    this.loadAverageDuration(); // Charge la durée moyenne des projets\n  }\n\n  ngAfterViewInit() {\n    if (this.statsData) {\n      this.initChart();\n    }\n  }\n  ngOnDestroy() {\n    this.destroyChart();\n  }\n  loadStats() {\n    this.isLoading = true;\n    this.error = null;\n    this.projectService.getStatisticsByStatus().subscribe({\n      next: stats => {\n        this.statsData = stats;\n        this.initChart();\n        this.isLoading = false;\n      },\n      error: err => {\n        console.error('Error loading stats:', err);\n        this.error = 'Erreur de chargement des données';\n        this.isLoading = false;\n      }\n    });\n  }\n  loadAverageDuration() {\n    this.projectService.getAverageDuration().subscribe({\n      next: duration => {\n        this.averageDuration = duration;\n      },\n      error: err => {\n        console.error('Error loading average duration:', err);\n      }\n    });\n  }\n  initChart() {\n    this.destroyChart();\n    if (!this.statsData) return;\n    const ctx = document.getElementById('projectStatsChart');\n    if (!ctx) return;\n    const statusLabels = {\n      'ON_GOING': 'ON GOING',\n      'COMPLETED': 'COMPLETED',\n      'DELAYED': 'DELAYED'\n    };\n    const labels = Object.keys(this.statsData).map(key => statusLabels[key] || key);\n    const data = Object.values(this.statsData);\n    this.chart = new Chart(ctx, {\n      type: 'pie',\n      data: {\n        labels: labels,\n        datasets: [{\n          data: data,\n          backgroundColor: ['#f4a261', '#2a9d8f', '#264653' // DELAYED\n          ],\n\n          borderWidth: 1\n        }]\n      },\n      options: {\n        responsive: true,\n        maintainAspectRatio: false,\n        plugins: {\n          legend: {\n            position: 'right'\n          },\n          tooltip: {\n            callbacks: {\n              label: context => {\n                const label = context.label || '';\n                const value = context.raw;\n                const total = context.dataset.data.reduce((a, b) => a + b, 0);\n                const percentage = Math.round(value / total * 100);\n                return `${label}: ${value} (${percentage}%)`;\n              }\n            }\n          }\n        }\n      }\n    });\n  }\n  destroyChart() {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = null;\n    }\n  }\n  getFormattedDuration(durationInDays) {\n    if (!durationInDays) return 'Chargement...';\n    const years = Math.floor(durationInDays / 365);\n    const months = Math.floor(durationInDays % 365 / 30);\n    const quarters = Math.floor(durationInDays / 90); // Un trimestre = 90 jours\n    const semesters = Math.floor(durationInDays / 180); // Un semestre = 180 jours\n    let formattedDuration = '';\n    if (years > 0) {\n      formattedDuration += `${years} ${years > 1 ? 'years' : 'year'}`;\n      if (months > 0) formattedDuration += ` and ${months} month`;\n    } else if (quarters > 0) {\n      formattedDuration += `${quarters} quarter${quarters > 1 ? 's' : ''}`;\n    } else if (semesters > 0) {\n      formattedDuration += `${semesters} semester${semesters > 1 ? 's' : ''}`;\n    } else {\n      formattedDuration = `${durationInDays} days`;\n    }\n    return formattedDuration;\n  }\n  static {\n    this.ɵfac = function ProjectStatsComponent_Factory(t) {\n      return new (t || ProjectStatsComponent)(i0.ɵɵdirectiveInject(i1.ProjectControllerService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ProjectStatsComponent,\n      selectors: [[\"app-project-stats\"]],\n      decls: 10,\n      vars: 1,\n      consts: [[1, \"project-stats-container\"], [1, \"chart-container\"], [\"id\", \"projectStatsChart\"], [1, \"floating-card\"]],\n      template: function ProjectStatsComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Display Project Statistiques\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"div\", 1);\n          i0.ɵɵelement(4, \"canvas\", 2);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(5, \"div\", 3)(6, \"h3\");\n          i0.ɵɵtext(7, \"Average Duration\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"p\");\n          i0.ɵɵtext(9);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(9);\n          i0.ɵɵtextInterpolate(ctx.getFormattedDuration(ctx.averageDuration));\n        }\n      },\n      styles: [\".project-stats-container[_ngcontent-%COMP%] {\\n  max-width: 900px;\\n  margin: 40px auto;\\n  padding: 30px 25px;\\n  background-color: #ffffff;\\n  border-radius: 12px;\\n  box-shadow: 0 6px 14px rgba(0, 0, 0, 0.08);\\n}\\n\\n.project-stats-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  text-align: center;\\n  font-weight: bold;\\n  color: #e0691a;\\n  margin-bottom: 30px;\\n  font-size: 24px;\\n}\\n\\n\\n\\n.chart-container[_ngcontent-%COMP%] {\\n  width: 100%;\\n  height: 400px;\\n  padding: 20px;\\n  box-sizing: border-box;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n}\\n\\ncanvas[_ngcontent-%COMP%] {\\n  width: 100% !important;\\n  height: 100% !important;\\n}\\n\\n\\n\\n.floating-card[_ngcontent-%COMP%] {\\n  position: relative;\\n  margin: 30px auto 0 auto;\\n  background-color: #19524b;\\n  color: white;\\n  border-radius: 15px;\\n  padding: 20px 25px;\\n  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);\\n  text-align: center;\\n  transition: transform 0.3s ease, box-shadow 0.3s ease;\\n  max-width: 420px;\\n}\\n\\n.floating-card[_ngcontent-%COMP%]:hover {\\n  transform: translateY(-6px);\\n  box-shadow: 0 10px 22px rgba(0, 0, 0, 0.15);\\n}\\n\\n.floating-card[_ngcontent-%COMP%]   h3[_ngcontent-%COMP%] {\\n  margin-bottom: 10px;\\n  font-size: 1.3em;\\n  font-weight: 600;\\n}\\n\\n.floating-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-size: 1.2em;\\n  font-weight: bold;\\n  margin-bottom: 0;\\n  transition: transform 0.3s ease, color 0.3s ease;\\n}\\n\\n.floating-card[_ngcontent-%COMP%]:hover   p[_ngcontent-%COMP%] {\\n  transform: scale(1.07);\\n  color: #e0691a;\\n}\\n\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvcHJvamVjdC1zdGF0cy9wcm9qZWN0LXN0YXRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLGtCQUFrQjtFQUNsQix5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLDBDQUEwQztBQUM1Qzs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsY0FBYztFQUNkLG1CQUFtQjtFQUNuQixlQUFlO0FBQ2pCOztBQUVBLGNBQWM7QUFDZDtFQUNFLFdBQVc7RUFDWCxhQUFhO0VBQ2IsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixhQUFhO0VBQ2IsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHNCQUFzQjtFQUN0Qix1QkFBdUI7QUFDekI7O0FBRUEsMENBQTBDO0FBQzFDO0VBQ0Usa0JBQWtCO0VBQ2xCLHdCQUF3QjtFQUN4Qix5QkFBeUI7RUFDekIsWUFBWTtFQUNaLG1CQUFtQjtFQUNuQixrQkFBa0I7RUFDbEIseUNBQXlDO0VBQ3pDLGtCQUFrQjtFQUNsQixxREFBcUQ7RUFDckQsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsMkJBQTJCO0VBQzNCLDJDQUEyQztBQUM3Qzs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGlCQUFpQjtFQUNqQixnQkFBZ0I7RUFDaEIsZ0RBQWdEO0FBQ2xEOztBQUVBO0VBQ0Usc0JBQXNCO0VBQ3RCLGNBQWM7QUFDaEIiLCJzb3VyY2VzQ29udGVudCI6WyIucHJvamVjdC1zdGF0cy1jb250YWluZXIge1xyXG4gIG1heC13aWR0aDogOTAwcHg7XHJcbiAgbWFyZ2luOiA0MHB4IGF1dG87XHJcbiAgcGFkZGluZzogMzBweCAyNXB4O1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XHJcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcclxuICBib3gtc2hhZG93OiAwIDZweCAxNHB4IHJnYmEoMCwgMCwgMCwgMC4wOCk7XHJcbn1cclxuXHJcbi5wcm9qZWN0LXN0YXRzLWNvbnRhaW5lciBoMiB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGNvbG9yOiAjZTA2OTFhO1xyXG4gIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcbiAgZm9udC1zaXplOiAyNHB4O1xyXG59XHJcblxyXG4vKiBHcmFwaGlxdWUgKi9cclxuLmNoYXJ0LWNvbnRhaW5lciB7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgaGVpZ2h0OiA0MDBweDtcclxuICBwYWRkaW5nOiAyMHB4O1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG5jYW52YXMge1xyXG4gIHdpZHRoOiAxMDAlICFpbXBvcnRhbnQ7XHJcbiAgaGVpZ2h0OiAxMDAlICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi8qIENhcnRlIGZsb3R0YW50ZSBwb3VyIGxhIGR1csODwqllIG1veWVubmUgKi9cclxuLmZsb2F0aW5nLWNhcmQge1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICBtYXJnaW46IDMwcHggYXV0byAwIGF1dG87XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogIzE5NTI0YjtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICBwYWRkaW5nOiAyMHB4IDI1cHg7XHJcbiAgYm94LXNoYWRvdzogMCA4cHggMTZweCByZ2JhKDAsIDAsIDAsIDAuMSk7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gIHRyYW5zaXRpb246IHRyYW5zZm9ybSAwLjNzIGVhc2UsIGJveC1zaGFkb3cgMC4zcyBlYXNlO1xyXG4gIG1heC13aWR0aDogNDIwcHg7XHJcbn1cclxuXHJcbi5mbG9hdGluZy1jYXJkOmhvdmVyIHtcclxuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTZweCk7XHJcbiAgYm94LXNoYWRvdzogMCAxMHB4IDIycHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcclxufVxyXG5cclxuLmZsb2F0aW5nLWNhcmQgaDMge1xyXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgZm9udC1zaXplOiAxLjNlbTtcclxuICBmb250LXdlaWdodDogNjAwO1xyXG59XHJcblxyXG4uZmxvYXRpbmctY2FyZCBwIHtcclxuICBmb250LXNpemU6IDEuMmVtO1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIG1hcmdpbi1ib3R0b206IDA7XHJcbiAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MgZWFzZSwgY29sb3IgMC4zcyBlYXNlO1xyXG59XHJcblxyXG4uZmxvYXRpbmctY2FyZDpob3ZlciBwIHtcclxuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDcpO1xyXG4gIGNvbG9yOiAjZTA2OTFhO1xyXG59XHJcbiJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Chart","registerables","ProjectStatsComponent","constructor","projectService","chart","isLoading","error","statsData","averageDuration","register","ngOnInit","loadStats","loadAverageDuration","ngAfterViewInit","initChart","ngOnDestroy","destroyChart","getStatisticsByStatus","subscribe","next","stats","err","console","getAverageDuration","duration","ctx","document","getElementById","statusLabels","labels","Object","keys","map","key","data","values","type","datasets","backgroundColor","borderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","tooltip","callbacks","label","context","value","raw","total","dataset","reduce","a","b","percentage","Math","round","destroy","getFormattedDuration","durationInDays","years","floor","months","quarters","semesters","formattedDuration","i0","ɵɵdirectiveInject","i1","ProjectControllerService","selectors","decls","vars","consts","template","ProjectStatsComponent_Template","rf","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate"],"sources":["C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\pages\\project-stats\\project-stats.component.ts","C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\pages\\project-stats\\project-stats.component.html"],"sourcesContent":["import { Component, OnInit, AfterViewInit, OnDestroy } from '@angular/core';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport { ProjectControllerService } from 'src/app/servicesAbir/services';\r\n\r\n@Component({\r\n  selector: 'app-project-stats',\r\n  templateUrl: './project-stats.component.html',\r\n  styleUrls: ['./project-stats.component.css']\r\n})\r\nexport class ProjectStatsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n  private chart: Chart | null = null;\r\n  isLoading = true;\r\n  error: string | null = null;\r\n  statsData: { [key: string]: number } | null = null;\r\n  averageDuration: number | null = null; // Nouvelle variable pour la durée moyenne\r\n\r\n  constructor(private projectService: ProjectControllerService) {\r\n    Chart.register(...registerables);\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.loadStats();\r\n    this.loadAverageDuration(); // Charge la durée moyenne des projets\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    if (this.statsData) {\r\n      this.initChart();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.destroyChart();\r\n  }\r\n\r\n  loadStats(): void {\r\n    this.isLoading = true;\r\n    this.error = null;\r\n\r\n    this.projectService.getStatisticsByStatus().subscribe({\r\n      next: (stats) => {\r\n        this.statsData = stats;\r\n        this.initChart();\r\n        this.isLoading = false;\r\n      },\r\n      error: (err) => {\r\n        console.error('Error loading stats:', err);\r\n        this.error = 'Erreur de chargement des données';\r\n        this.isLoading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  loadAverageDuration(): void {\r\n    this.projectService.getAverageDuration().subscribe({\r\n      next: (duration) => {\r\n        this.averageDuration = duration;\r\n      },\r\n      error: (err) => {\r\n        console.error('Error loading average duration:', err);\r\n      }\r\n    });\r\n  }\r\n\r\n  private initChart(): void {\r\n    this.destroyChart();\r\n\r\n    if (!this.statsData) return;\r\n\r\n    const ctx = document.getElementById('projectStatsChart') as HTMLCanvasElement;\r\n    if (!ctx) return;\r\n\r\n    const statusLabels = {\r\n      'ON_GOING': 'ON GOING',\r\n      'COMPLETED': 'COMPLETED',\r\n      'DELAYED': 'DELAYED'\r\n    };\r\n\r\n    const labels = Object.keys(this.statsData).map(key => statusLabels[key as keyof typeof statusLabels] || key);\r\n    const data = Object.values(this.statsData);\r\n\r\n    this.chart = new Chart(ctx, {\r\n      type: 'pie',\r\n      data: {\r\n        labels: labels,\r\n        datasets: [{\r\n          data: data,\r\n          backgroundColor: [\r\n            '#f4a261', // ON_GOING\r\n            '#2a9d8f', // COMPLETED\r\n            '#264653'  // DELAYED\r\n          ],\r\n          borderWidth: 1\r\n        }]\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        maintainAspectRatio: false,\r\n        plugins: {\r\n          legend: {\r\n            position: 'right',\r\n          },\r\n          tooltip: {\r\n            callbacks: {\r\n              label: (context) => {\r\n                const label = context.label || '';\r\n                const value = context.raw as number;\r\n                const total = context.dataset.data.reduce((a: number, b: number) => a + b, 0);\r\n                const percentage = Math.round((value / total) * 100);\r\n                return `${label}: ${value} (${percentage}%)`;\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private destroyChart(): void {\r\n    if (this.chart) {\r\n      this.chart.destroy();\r\n      this.chart = null;\r\n    }\r\n  }\r\n\r\n  getFormattedDuration(durationInDays: number | null): string {\r\n    if (!durationInDays) return 'Chargement...';\r\n  \r\n    const years = Math.floor(durationInDays / 365);\r\n    const months = Math.floor((durationInDays % 365) / 30);\r\n    const quarters = Math.floor(durationInDays / 90); // Un trimestre = 90 jours\r\n    const semesters = Math.floor(durationInDays / 180); // Un semestre = 180 jours\r\n  \r\n    let formattedDuration = '';\r\n  \r\n    if (years > 0) {\r\n      formattedDuration += `${years} ${years > 1 ? 'years' : 'year'}`;\r\n      if (months > 0) formattedDuration += ` and ${months} month`;\r\n    } else if (quarters > 0) {\r\n      formattedDuration += `${quarters} quarter${quarters > 1 ? 's' : ''}`;\r\n    } else if (semesters > 0) {\r\n      formattedDuration += `${semesters} semester${semesters > 1 ? 's' : ''}`;\r\n    } else {\r\n      formattedDuration = `${durationInDays} days`;\r\n    }\r\n  \r\n    return formattedDuration;\r\n  }\r\n  \r\n}","<div class=\"project-stats-container\">\r\n  <h2>Display Project Statistiques</h2>\r\n\r\n  <!-- Container pour le graphique en camembert -->\r\n  <div class=\"chart-container\">\r\n    <canvas id=\"projectStatsChart\"></canvas>\r\n  </div>\r\n\r\n  <!-- Affichage de la durée moyenne des projets sous une forme créative -->\r\n  <div class=\"floating-card\">\r\n    <h3>Average Duration</h3>\r\n    <p>{{ getFormattedDuration(averageDuration) }}</p>\r\n  </div>\r\n</div>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}