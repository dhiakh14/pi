{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/service-arij/supplier.service\";\nimport * as i2 from \"@angular/router\";\nexport class SupplierMapComponent {\n  constructor(supplierService, router) {\n    this.supplierService = supplierService;\n    this.router = router;\n    this.suppliers = [];\n    this.center = {\n      lat: 36.8065,\n      lng: 10.1815\n    }; // Default center (e.g., Tunis)\n    this.zoom = 13;\n    this.markers = []; // Store markers here for future reference\n    this.selectedSupplier = null; // To store the currently selected supplier\n  }\n\n  ngOnInit() {\n    this.supplierService.getSuppliers().subscribe(data => {\n      this.suppliers = data.map(supplier => ({\n        name: supplier.name,\n        address: supplier.address\n      }));\n      this.initMap();\n    });\n  }\n  initMap() {\n    const map = new google.maps.Map(document.getElementById(\"map\"), {\n      center: this.center,\n      zoom: this.zoom\n    });\n    // Loop through suppliers and convert their address to coordinates\n    this.suppliers.forEach(supplier => {\n      this.geocodeAddress(supplier.address, map, supplier);\n    });\n  }\n  // Geocode address to get latitude and longitude\n  geocodeAddress(address, map, supplier) {\n    const geocoder = new google.maps.Geocoder();\n    geocoder.geocode({\n      address: address\n    }, (results, status) => {\n      if (status === \"OK\" && results[0]) {\n        const position = results[0].geometry.location;\n        const marker = new google.maps.Marker({\n          map: map,\n          position: position,\n          label: supplier.name\n        });\n        // Add click event to show supplier details on marker click\n        marker.addListener('click', () => {\n          this.openSupplierDetails(supplier); // Open supplier details when marker is clicked\n        });\n\n        this.markers.push(marker); // Add marker to the array\n      }\n    });\n  }\n  // Open supplier details when clicking on a marker\n  openSupplierDetails(supplier) {\n    this.selectedSupplier = supplier;\n    alert(`Supplier: ${supplier.name}\\nAddress: ${supplier.address}`); // This is just an example; you can enhance it\n  }\n  // Method to clear the markers from the map\n  clearMarkers() {\n    this.markers.forEach(marker => marker.setMap(null));\n    this.markers = [];\n  }\n  navigateToDashboard() {\n    this.router.navigate(['/dashboard']);\n  }\n  static {\n    this.ɵfac = function SupplierMapComponent_Factory(t) {\n      return new (t || SupplierMapComponent)(i0.ɵɵdirectiveInject(i1.SupplierService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SupplierMapComponent,\n      selectors: [[\"app-supplier-map\"]],\n      decls: 11,\n      vars: 0,\n      consts: [[1, \"map-page-container\"], [\"id\", \"map\", 2, \"height\", \"500px\", \"width\", \"100%\", \"margin-top\", \"20px\", \"border\", \"1px solid #ccc\", \"border-radius\", \"10px\"], [1, \"map-actions\"], [1, \"clear-markers-btn\", 3, \"click\"], [1, \"btn-dashboard\", 3, \"click\"]],\n      template: function SupplierMapComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Geographic Distribution of Suppliers\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"p\");\n          i0.ɵɵtext(4, \"Explore the map below to see the geographic distribution of our suppliers. Click on a marker to view more details about a supplier.\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(5, \"div\", 1);\n          i0.ɵɵelementStart(6, \"div\", 2)(7, \"button\", 3);\n          i0.ɵɵlistener(\"click\", function SupplierMapComponent_Template_button_click_7_listener() {\n            return ctx.clearMarkers();\n          });\n          i0.ɵɵtext(8, \"Clear Markers\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"button\", 4);\n          i0.ɵɵlistener(\"click\", function SupplierMapComponent_Template_button_click_9_listener() {\n            return ctx.navigateToDashboard();\n          });\n          i0.ɵɵtext(10, \"\\u2B05 Back to Dashboard\");\n          i0.ɵɵelementEnd()()();\n        }\n      },\n      styles: [\".map-page-container[_ngcontent-%COMP%] {\\n    padding: 20px;\\n    text-align: center;\\n    background-color: #f9f9f9;\\n    border-radius: 8px;\\n  }\\n  \\n  .map-page-container[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n    font-size: 2rem;\\n    margin-bottom: 20px;\\n  }\\n  \\n  .map-page-container[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n    font-size: 1.1rem;\\n    margin-bottom: 30px;\\n  }\\n  \\n  .map-actions[_ngcontent-%COMP%] {\\n    margin-top: 20px;\\n  }\\n  \\n  .clear-markers-btn[_ngcontent-%COMP%] {\\n    background-color: #007bff;\\n    color: white;\\n    border: none;\\n    border-radius: 5px;\\n    padding: 10px 15px;\\n    cursor: pointer;\\n  }\\n  \\n  .clear-markers-btn[_ngcontent-%COMP%]:hover {\\n    background-color: #0056b3;\\n  }\\n  \\n\\n  .btn-dashboard[_ngcontent-%COMP%] {\\n    background-color: #4CAF50; \\n\\n    color: white;\\n    border: none;\\n    border-radius: 5px;\\n    padding: 10px 20px;\\n    font-size: 16px;\\n    cursor: pointer;\\n    margin-top: 20px; \\n\\n    width: auto; \\n\\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.2);\\n    transition: background-color 0.3s ease, transform 0.2s ease;\\n    display: inline-block;\\n  }\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvc3VwcGxpZXItbWFwL3N1cHBsaWVyLW1hcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtJQUNiLGtCQUFrQjtJQUNsQix5QkFBeUI7SUFDekIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLGlCQUFpQjtJQUNqQixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxnQkFBZ0I7RUFDbEI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsa0JBQWtCO0lBQ2xCLGVBQWU7RUFDakI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7OztFQUdBO0lBQ0UseUJBQXlCLEVBQUUscUJBQXFCO0lBQ2hELFlBQVk7SUFDWixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLGtCQUFrQjtJQUNsQixlQUFlO0lBQ2YsZUFBZTtJQUNmLGdCQUFnQixFQUFFLGdDQUFnQztJQUNsRCxXQUFXLEVBQUUsa0NBQWtDO0lBQy9DLHdDQUF3QztJQUN4QywyREFBMkQ7SUFDM0QscUJBQXFCO0VBQ3ZCIiwic291cmNlc0NvbnRlbnQiOlsiLm1hcC1wYWdlLWNvbnRhaW5lciB7XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Y5ZjlmOTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcclxuICB9XHJcbiAgXHJcbiAgLm1hcC1wYWdlLWNvbnRhaW5lciBoMiB7XHJcbiAgICBmb250LXNpemU6IDJyZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gIH1cclxuICBcclxuICAubWFwLXBhZ2UtY29udGFpbmVyIHAge1xyXG4gICAgZm9udC1zaXplOiAxLjFyZW07XHJcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gIH1cclxuICBcclxuICAubWFwLWFjdGlvbnMge1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDtcclxuICB9XHJcbiAgXHJcbiAgLmNsZWFyLW1hcmtlcnMtYnRuIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6ICMwMDdiZmY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5jbGVhci1tYXJrZXJzLWJ0bjpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA1NmIzO1xyXG4gIH1cclxuICBcclxuXHJcbiAgLmJ0bi1kYXNoYm9hcmQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzRDQUY1MDsgLyogR3JlZW4gYmFja2dyb3VuZCAqL1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgYm9yZGVyOiBub25lO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgcGFkZGluZzogMTBweCAyMHB4O1xyXG4gICAgZm9udC1zaXplOiAxNnB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgbWFyZ2luLXRvcDogMjBweDsgLyogQWRkcyBzcGFjZSBhYm92ZSB0aGUgYnV0dG9uICovXHJcbiAgICB3aWR0aDogYXV0bzsgLyogQWRqdXN0IHdpZHRoIGJhc2VkIG9uIGNvbnRlbnQgKi9cclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDZweCByZ2JhKDAsIDAsIDAsIDAuMik7XHJcbiAgICB0cmFuc2l0aW9uOiBiYWNrZ3JvdW5kLWNvbG9yIDAuM3MgZWFzZSwgdHJhbnNmb3JtIDAuMnMgZWFzZTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n    });\n  }\n}","map":{"version":3,"names":["SupplierMapComponent","constructor","supplierService","router","suppliers","center","lat","lng","zoom","markers","selectedSupplier","ngOnInit","getSuppliers","subscribe","data","map","supplier","name","address","initMap","google","maps","Map","document","getElementById","forEach","geocodeAddress","geocoder","Geocoder","geocode","results","status","position","geometry","location","marker","Marker","label","addListener","openSupplierDetails","push","alert","clearMarkers","setMap","navigateToDashboard","navigate","i0","ɵɵdirectiveInject","i1","SupplierService","i2","Router","selectors","decls","vars","consts","template","SupplierMapComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵlistener","SupplierMapComponent_Template_button_click_7_listener","SupplierMapComponent_Template_button_click_9_listener"],"sources":["C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\pages\\supplier-map\\supplier-map.component.ts","C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\pages\\supplier-map\\supplier-map.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { SupplierService } from 'src/app/service-arij/supplier.service';\nimport { Router} from '@angular/router';\n\ndeclare var google: any;\n\n@Component({\n  selector: 'app-supplier-map',\n  templateUrl: './supplier-map.component.html',\n  styleUrls: ['./supplier-map.component.css']\n})\nexport class SupplierMapComponent implements OnInit {\n  suppliers: any[] = [];\n  center = { lat: 36.8065, lng: 10.1815 }; // Default center (e.g., Tunis)\n  zoom = 13;\n  markers: any[] = []; // Store markers here for future reference\n  selectedSupplier: any = null;  // To store the currently selected supplier\n\n  constructor(private supplierService: SupplierService, private router: Router) {}\n\n  ngOnInit(): void {\n    this.supplierService.getSuppliers().subscribe(data => {\n      this.suppliers = data.map(supplier => ({\n        name: supplier.name,\n        address: supplier.address\n      }));\n      \n      this.initMap();\n    });\n  }\n\n  initMap(): void {\n    const map = new google.maps.Map(document.getElementById(\"map\"), {\n      center: this.center,\n      zoom: this.zoom,\n    });\n\n    // Loop through suppliers and convert their address to coordinates\n    this.suppliers.forEach(supplier => {\n      this.geocodeAddress(supplier.address, map, supplier);\n    });\n  }\n\n  // Geocode address to get latitude and longitude\n  geocodeAddress(address: string, map: any, supplier: any): void {\n    const geocoder = new google.maps.Geocoder();\n    geocoder.geocode({ address: address }, (results: google.maps.GeocoderResult[], status: google.maps.GeocoderStatus) => {\n      if (status === \"OK\" && results[0]) {\n        const position = results[0].geometry.location;\n\n        const marker = new google.maps.Marker({\n          map: map,\n          position: position,\n          label: supplier.name\n        });\n\n        // Add click event to show supplier details on marker click\n        marker.addListener('click', () => {\n          this.openSupplierDetails(supplier);  // Open supplier details when marker is clicked\n        });\n\n        this.markers.push(marker); // Add marker to the array\n      }\n    });\n  }\n\n  // Open supplier details when clicking on a marker\n  openSupplierDetails(supplier: any): void {\n    this.selectedSupplier = supplier;\n    alert(`Supplier: ${supplier.name}\\nAddress: ${supplier.address}`);  // This is just an example; you can enhance it\n  }\n\n  // Method to clear the markers from the map\n  clearMarkers(): void {\n    this.markers.forEach(marker => marker.setMap(null)); \n    this.markers = [];\n  }\n\n  navigateToDashboard(): void {\n    this.router.navigate(['/dashboard']);\n  }\n\n  \n}\n","<div class=\"map-page-container\">\n    <h2>Geographic Distribution of Suppliers</h2>\n    <p>Explore the map below to see the geographic distribution of our suppliers. Click on a marker to view more details about a supplier.</p>\n  \n    <div id=\"map\" style=\"height: 500px; width: 100%; margin-top: 20px; border: 1px solid #ccc; border-radius: 10px;\">\n      <!-- Google Map will be embedded here -->\n    </div>\n  \n    <div class=\"map-actions\">\n      <button class=\"clear-markers-btn\" (click)=\"clearMarkers()\">Clear Markers</button>\n\n      <button class=\"btn-dashboard\" (click)=\"navigateToDashboard()\">⬅ Back to Dashboard</button>\n\n    </div>\n  </div>\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}