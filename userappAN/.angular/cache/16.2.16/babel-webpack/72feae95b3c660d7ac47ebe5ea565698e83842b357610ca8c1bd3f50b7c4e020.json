{"ast":null,"code":"import { Router } from '@angular/router';\nimport { inject } from '@angular/core';\nimport { TokenService } from '../token/token.service';\nexport const connectedGuard = (route, state) => {\n  const tokenService = inject(TokenService);\n  const router = inject(Router);\n  if (tokenService.isAuthenticated()) {\n    return true;\n  } else {\n    router.navigate(['/login']);\n    return false;\n  }\n};","map":{"version":3,"names":["Router","inject","TokenService","connectedGuard","route","state","tokenService","router","isAuthenticated","navigate"],"sources":["C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\guards\\connected.guard.ts"],"sourcesContent":["import { CanActivateFn, Router } from '@angular/router';\r\nimport { inject } from '@angular/core';\r\nimport { TokenService } from '../token/token.service';\r\n\r\nexport const connectedGuard: CanActivateFn = (route, state) => {\r\n  const tokenService = inject(TokenService); \r\n  const router = inject(Router); \r\n\r\n  if (tokenService.isAuthenticated()) {\r\n    return true; \r\n  } else {\r\n    router.navigate(['/login']); \r\n    return false; \r\n  }\r\n};"],"mappings":"AAAA,SAAwBA,MAAM,QAAQ,iBAAiB;AACvD,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,YAAY,QAAQ,wBAAwB;AAErD,OAAO,MAAMC,cAAc,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EAC5D,MAAMC,YAAY,GAAGL,MAAM,CAACC,YAAY,CAAC;EACzC,MAAMK,MAAM,GAAGN,MAAM,CAACD,MAAM,CAAC;EAE7B,IAAIM,YAAY,CAACE,eAAe,EAAE,EAAE;IAClC,OAAO,IAAI;GACZ,MAAM;IACLD,MAAM,CAACE,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC3B,OAAO,KAAK;;AAEhB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}