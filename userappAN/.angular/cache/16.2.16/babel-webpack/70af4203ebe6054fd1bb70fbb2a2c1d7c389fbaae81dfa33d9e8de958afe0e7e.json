{"ast":null,"code":"/* tslint:disable */\n/* eslint-disable */\n/* Code generated by ng-openapi-gen DO NOT EDIT. */\nimport { HttpResponse } from '@angular/common/http';\nimport { filter, map } from 'rxjs/operators';\nimport { RequestBuilder } from '../../request-builder';\nexport function countProjectsByStatus(http, rootUrl, params, context) {\n  const rb = new RequestBuilder(rootUrl, countProjectsByStatus.PATH, 'get');\n  if (params) {\n    rb.query('status', params.status, {});\n  }\n  return http.request(rb.build({\n    responseType: 'json',\n    accept: '*/*',\n    context\n  })).pipe(filter(r => r instanceof HttpResponse), map(r => {\n    return r.clone({\n      body: parseFloat(String(r.body))\n    });\n  }));\n}\ncountProjectsByStatus.PATH = '/project/getProjectsByStatus/{status}';","map":{"version":3,"names":["HttpResponse","filter","map","RequestBuilder","countProjectsByStatus","http","rootUrl","params","context","rb","PATH","query","status","request","build","responseType","accept","pipe","r","clone","body","parseFloat","String"],"sources":["C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\servicesAbir\\fn\\project-controller\\count-projects-by-status.ts"],"sourcesContent":["/* tslint:disable */\r\n/* eslint-disable */\r\n/* Code generated by ng-openapi-gen DO NOT EDIT. */\r\n\r\nimport { HttpClient, HttpContext, HttpResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { filter, map } from 'rxjs/operators';\r\nimport { StrictHttpResponse } from '../../strict-http-response';\r\nimport { RequestBuilder } from '../../request-builder';\r\n\r\n\r\nexport interface CountProjectsByStatus$Params {\r\n  status: 'ON_GOING' | 'COMPLETED' | 'DELAYED';\r\n}\r\n\r\nexport function countProjectsByStatus(http: HttpClient, rootUrl: string, params: CountProjectsByStatus$Params, context?: HttpContext): Observable<StrictHttpResponse<number>> {\r\n  const rb = new RequestBuilder(rootUrl, countProjectsByStatus.PATH, 'get');\r\n  if (params) {\r\n    rb.query('status', params.status, {});\r\n  }\r\n\r\n  return http.request(\r\n    rb.build({ responseType: 'json', accept: '*/*', context })\r\n  ).pipe(\r\n    filter((r: any): r is HttpResponse<any> => r instanceof HttpResponse),\r\n    map((r: HttpResponse<any>) => {\r\n      return (r as HttpResponse<any>).clone({ body: parseFloat(String((r as HttpResponse<any>).body)) }) as StrictHttpResponse<number>;\r\n    })\r\n  );\r\n}\r\n\r\ncountProjectsByStatus.PATH = '/project/getProjectsByStatus/{status}';\r\n"],"mappings":"AAAA;AACA;AACA;AAEA,SAAkCA,YAAY,QAAQ,sBAAsB;AAE5E,SAASC,MAAM,EAAEC,GAAG,QAAQ,gBAAgB;AAE5C,SAASC,cAAc,QAAQ,uBAAuB;AAOtD,OAAM,SAAUC,qBAAqBA,CAACC,IAAgB,EAAEC,OAAe,EAAEC,MAAoC,EAAEC,OAAqB;EAClI,MAAMC,EAAE,GAAG,IAAIN,cAAc,CAACG,OAAO,EAAEF,qBAAqB,CAACM,IAAI,EAAE,KAAK,CAAC;EACzE,IAAIH,MAAM,EAAE;IACVE,EAAE,CAACE,KAAK,CAAC,QAAQ,EAAEJ,MAAM,CAACK,MAAM,EAAE,EAAE,CAAC;;EAGvC,OAAOP,IAAI,CAACQ,OAAO,CACjBJ,EAAE,CAACK,KAAK,CAAC;IAAEC,YAAY,EAAE,MAAM;IAAEC,MAAM,EAAE,KAAK;IAAER;EAAO,CAAE,CAAC,CAC3D,CAACS,IAAI,CACJhB,MAAM,CAAEiB,CAAM,IAA6BA,CAAC,YAAYlB,YAAY,CAAC,EACrEE,GAAG,CAAEgB,CAAoB,IAAI;IAC3B,OAAQA,CAAuB,CAACC,KAAK,CAAC;MAAEC,IAAI,EAAEC,UAAU,CAACC,MAAM,CAAEJ,CAAuB,CAACE,IAAI,CAAC;IAAC,CAAE,CAA+B;EAClI,CAAC,CAAC,CACH;AACH;AAEAhB,qBAAqB,CAACM,IAAI,GAAG,uCAAuC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}