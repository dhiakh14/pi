{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/service-arij/supplier.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common/http\";\nfunction SupplierUpdateComponent_p_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 21);\n    i0.ɵɵtext(1, \"Summarizing notes...\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SupplierUpdateComponent_p_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.errorMessage);\n  }\n}\nexport class SupplierUpdateComponent {\n  constructor(fb, supplierService, route, router, http // ✅ Ensure HttpClient is injected\n  ) {\n    this.fb = fb;\n    this.supplierService = supplierService;\n    this.route = route;\n    this.router = router;\n    this.http = http;\n    this.sentimentResult = '';\n    this.sentimentError = '';\n    this.errorMessage = '';\n    this.isSummarizing = false;\n  }\n  ngOnInit() {\n    this.supplierId = Number(this.route.snapshot.paramMap.get('id'));\n    // Initialize the form\n    this.updateSupplierForm = this.fb.group({\n      name: ['', Validators.required],\n      address: ['', Validators.required],\n      phoneNumber: ['', [Validators.required, Validators.pattern('^[0-9]{8,15}$')]],\n      email: ['', [Validators.required, Validators.email]],\n      status: ['', Validators.required],\n      notes: [''],\n      sentiment: [''] // ✅ Add this\n    });\n    // Fetch supplier details and populate the form\n    this.supplierService.getSupplierById(this.supplierId).subscribe(supplier => {\n      if (supplier) {\n        console.log('Fetched supplier:', supplier);\n        this.updateSupplierForm.patchValue({\n          name: supplier.name,\n          address: supplier.address,\n          phoneNumber: supplier.phoneNumber,\n          email: supplier.email,\n          status: supplier.status || 'ACTIVE',\n          notes: supplier.notes || '',\n          sentiment: supplier.sentiment || '',\n          aiRating: supplier.aiRating || 0\n        });\n        // ✅ Mark all controls as touched to ensure validation updates\n        Object.keys(this.updateSupplierForm.controls).forEach(field => {\n          const control = this.updateSupplierForm.get(field);\n          if (control) {\n            control.markAsTouched();\n            control.updateValueAndValidity();\n          }\n        });\n        console.log('Form after patchValue:', this.updateSupplierForm.value);\n      }\n    });\n  }\n  analyzeSentiment() {\n    const notes = this.updateSupplierForm.get('notes')?.value;\n    if (!notes) {\n      this.sentimentError = \"Please enter notes first.\";\n      return;\n    }\n    this.supplierService.analyzeSentiment(notes).subscribe({\n      next: response => {\n        const sentiment = response.sentiment;\n        const aiRating = sentiment === 'POSITIVE' ? 5 : sentiment === 'NEUTRAL' ? 3 : 1;\n        // ✅ Update form fields\n        this.updateSupplierForm.patchValue({\n          sentiment: sentiment,\n          aiRating: aiRating\n        });\n      },\n      error: err => {\n        this.sentimentError = \"Analysis failed. Try again.\";\n      }\n    });\n  }\n  summarizeNotes() {\n    const notes = this.updateSupplierForm.get('notes')?.value;\n    if (!notes || notes.trim() === '') {\n      this.errorMessage = \"Please enter notes before summarizing.\";\n      return;\n    }\n    this.isSummarizing = true;\n    this.errorMessage = '';\n    const apiUrl = 'http://localhost:8080/api/suppliers/summarize';\n    const headers = {\n      'Content-Type': 'application/json'\n    };\n    const requestBody = {\n      inputs: notes\n    }; // ✅ Ensure correct key\n    this.http.post(apiUrl, requestBody, {\n      headers\n    }).subscribe(response => {\n      console.log(\"Summarization Response:\", response);\n      this.isSummarizing = false;\n      if (response.summary) {\n        this.updateSupplierForm.patchValue({\n          notes: response.summary\n        });\n      } else {\n        this.errorMessage = \"Summarization failed.\";\n      }\n    }, error => {\n      console.error(\"Summarization Error:\", error);\n      this.isSummarizing = false;\n      this.errorMessage = \"Failed to summarize notes.\";\n    });\n  }\n  onUpdate() {\n    if (this.updateSupplierForm.invalid) {\n      alert('Form is invalid. Check required fields.');\n      return;\n    }\n    const updateData = {\n      ...this.updateSupplierForm.value,\n      aiRating: this.updateSupplierForm.get('aiRating')?.value,\n      sentiment: this.updateSupplierForm.get('sentiment')?.value // Add this\n    };\n\n    this.supplierService.updateSupplier(this.supplierId, updateData).subscribe(() => {\n      alert('Supplier updated successfully!');\n      this.router.navigate(['/suppliers']);\n    });\n  }\n  static {\n    this.ɵfac = function SupplierUpdateComponent_Factory(t) {\n      return new (t || SupplierUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.SupplierService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.HttpClient));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: SupplierUpdateComponent,\n      selectors: [[\"app-supplier-update\"]],\n      decls: 39,\n      vars: 4,\n      consts: [[1, \"form-container\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"form-group\"], [\"for\", \"name\"], [\"id\", \"name\", \"formControlName\", \"name\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"address\"], [\"id\", \"address\", \"formControlName\", \"address\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"phoneNumber\"], [\"id\", \"phoneNumber\", \"formControlName\", \"phoneNumber\", \"type\", \"text\", 1, \"form-control\"], [\"for\", \"email\"], [\"id\", \"email\", \"formControlName\", \"email\", \"type\", \"email\", 1, \"form-control\"], [\"for\", \"status\"], [\"id\", \"status\", \"formControlName\", \"status\", 1, \"form-control\"], [\"value\", \"ACTIVE\"], [\"value\", \"INACTIVE\"], [\"for\", \"notes\"], [\"id\", \"notes\", \"formControlName\", \"notes\", 1, \"form-control\"], [\"type\", \"button\", 1, \"btn-summarize\", 3, \"click\"], [\"class\", \"loading-text\", 4, \"ngIf\"], [\"class\", \"error-text\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"], [1, \"loading-text\"], [1, \"error-text\"]],\n      template: function SupplierUpdateComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n          i0.ɵɵtext(2, \"Update Supplier\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 1);\n          i0.ɵɵlistener(\"ngSubmit\", function SupplierUpdateComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.onUpdate();\n          });\n          i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\", 3);\n          i0.ɵɵtext(6, \"Supplier Name\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(7, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n          i0.ɵɵtext(10, \"Address\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(11, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n          i0.ɵɵtext(14, \"Phone Number\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"input\", 8);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n          i0.ɵɵtext(18, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(19, \"input\", 10);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"div\", 2)(21, \"label\", 11);\n          i0.ɵɵtext(22, \"Status:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(23, \"select\", 12)(24, \"option\", 13);\n          i0.ɵɵtext(25, \"Active\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"option\", 14);\n          i0.ɵɵtext(27, \"Inactive\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(28, \"div\", 2)(29, \"label\", 15);\n          i0.ɵɵtext(30, \"Notes:\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(31, \"textarea\", 16);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(32, \"div\", 2)(33, \"button\", 17);\n          i0.ɵɵlistener(\"click\", function SupplierUpdateComponent_Template_button_click_33_listener() {\n            return ctx.summarizeNotes();\n          });\n          i0.ɵɵtext(34, \"\\uD83D\\uDCDD Summarize\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵtemplate(35, SupplierUpdateComponent_p_35_Template, 2, 0, \"p\", 18);\n          i0.ɵɵtemplate(36, SupplierUpdateComponent_p_36_Template, 2, 1, \"p\", 19);\n          i0.ɵɵelementStart(37, \"button\", 20);\n          i0.ɵɵtext(38, \" Update \");\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.updateSupplierForm);\n          i0.ɵɵadvance(32);\n          i0.ɵɵproperty(\"ngIf\", ctx.isSummarizing);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"disabled\", ctx.updateSupplierForm.invalid);\n        }\n      },\n      styles: [\".form-container[_ngcontent-%COMP%] {\\n    max-width: 500px;\\n    margin: 0 auto;\\n    padding: 20px;\\n    background: #fff;\\n    border-radius: 10px;\\n    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\\n  }\\n  \\n  h2[_ngcontent-%COMP%] {\\n    text-align: center;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%] {\\n    margin-bottom: 15px;\\n  }\\n  \\n  .form-group[_ngcontent-%COMP%]   label[_ngcontent-%COMP%] {\\n    font-weight: bold;\\n    display: block;\\n    margin-bottom: 5px;\\n  }\\n  \\n  .form-control[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 8px;\\n    border: 1px solid #ccc;\\n    border-radius: 5px;\\n  }\\n  \\n  .error[_ngcontent-%COMP%] {\\n    color: red;\\n    font-size: 0.875rem;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%] {\\n    width: 100%;\\n    padding: 10px;\\n    border: none;\\n    background: #007bff;\\n    color: white;\\n    font-size: 1rem;\\n    border-radius: 5px;\\n    cursor: pointer;\\n  }\\n  \\n  .btn-primary[_ngcontent-%COMP%]:disabled {\\n    background: gray;\\n    cursor: not-allowed;\\n  }\\n  .btn-summarize[_ngcontent-%COMP%] {\\n    background: #007bff;\\n    color: white;\\n    padding: 10px 15px;\\n    border: none;\\n    border-radius: 5px;\\n    cursor: pointer;\\n    font-size: 14px;\\n    display: block;  \\n\\n    margin-top: 10px;\\n  }\\n  \\n  .btn-summarize[_ngcontent-%COMP%]:hover {\\n    background: #0056b3;\\n  }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnZXMvc3VwcGxpZXItdXBkYXRlL3N1cHBsaWVyLXVwZGF0ZS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGNBQWM7SUFDZCxhQUFhO0lBQ2IsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQix3Q0FBd0M7RUFDMUM7O0VBRUE7SUFDRSxrQkFBa0I7RUFDcEI7O0VBRUE7SUFDRSxtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxpQkFBaUI7SUFDakIsY0FBYztJQUNkLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFVBQVU7SUFDVixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxXQUFXO0lBQ1gsYUFBYTtJQUNiLFlBQVk7SUFDWixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaLGVBQWU7SUFDZixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixtQkFBbUI7RUFDckI7RUFDQTtJQUNFLG1CQUFtQjtJQUNuQixZQUFZO0lBQ1osa0JBQWtCO0lBQ2xCLFlBQVk7SUFDWixrQkFBa0I7SUFDbEIsZUFBZTtJQUNmLGVBQWU7SUFDZixjQUFjLEdBQUcsd0JBQXdCO0lBQ3pDLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFLG1CQUFtQjtFQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi5mb3JtLWNvbnRhaW5lciB7XHJcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBwYWRkaW5nOiAyMHB4O1xyXG4gICAgYmFja2dyb3VuZDogI2ZmZjtcclxuICAgIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggcmdiYSgwLCAwLCAwLCAwLjEpO1xyXG4gIH1cclxuICBcclxuICBoMiB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWdyb3VwIGxhYmVsIHtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1cHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5mb3JtLWNvbnRyb2wge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gIH1cclxuICBcclxuICAuZXJyb3Ige1xyXG4gICAgY29sb3I6IHJlZDtcclxuICAgIGZvbnQtc2l6ZTogMC44NzVyZW07XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tcHJpbWFyeSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBiYWNrZ3JvdW5kOiAjMDA3YmZmO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gICAgZm9udC1zaXplOiAxcmVtO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIH1cclxuICBcclxuICAuYnRuLXByaW1hcnk6ZGlzYWJsZWQge1xyXG4gICAgYmFja2dyb3VuZDogZ3JheTtcclxuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XHJcbiAgfVxyXG4gIC5idG4tc3VtbWFyaXplIHtcclxuICAgIGJhY2tncm91bmQ6ICMwMDdiZmY7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBwYWRkaW5nOiAxMHB4IDE1cHg7XHJcbiAgICBib3JkZXI6IG5vbmU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICBmb250LXNpemU6IDE0cHg7XHJcbiAgICBkaXNwbGF5OiBibG9jazsgIC8qIEVuc3VyZSBpdCdzIHZpc2libGUgKi9cclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgfVxyXG4gIFxyXG4gIC5idG4tc3VtbWFyaXplOmhvdmVyIHtcclxuICAgIGJhY2tncm91bmQ6ICMwMDU2YjM7XHJcbiAgfVxyXG4gICJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n    });\n  }\n}","map":{"version":3,"names":["Validators","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ctx_r1","errorMessage","SupplierUpdateComponent","constructor","fb","supplierService","route","router","http","sentimentResult","sentimentError","isSummarizing","ngOnInit","supplierId","Number","snapshot","paramMap","get","updateSupplierForm","group","name","required","address","phoneNumber","pattern","email","status","notes","sentiment","getSupplierById","subscribe","supplier","console","log","patchValue","aiRating","Object","keys","controls","forEach","field","control","markAsTouched","updateValueAndValidity","value","analyzeSentiment","next","response","error","err","summarizeNotes","trim","apiUrl","headers","requestBody","inputs","post","summary","onUpdate","invalid","alert","updateData","updateSupplier","navigate","ɵɵdirectiveInject","i1","FormBuilder","i2","SupplierService","i3","ActivatedRoute","Router","i4","HttpClient","selectors","decls","vars","consts","template","SupplierUpdateComponent_Template","rf","ctx","ɵɵlistener","SupplierUpdateComponent_Template_form_ngSubmit_3_listener","ɵɵelement","SupplierUpdateComponent_Template_button_click_33_listener","ɵɵtemplate","SupplierUpdateComponent_p_35_Template","SupplierUpdateComponent_p_36_Template","ɵɵproperty"],"sources":["C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\pages\\supplier-update\\supplier-update.component.ts","C:\\Users\\moham\\Documents\\GitHub\\pi\\userappAN\\src\\app\\pages\\supplier-update\\supplier-update.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { SupplierService } from 'src/app/service-arij/supplier.service';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-supplier-update',\r\n  templateUrl: './supplier-update.component.html',\r\n  styleUrls: ['./supplier-update.component.css']\r\n})\r\nexport class SupplierUpdateComponent implements OnInit {\r\n  updateSupplierForm!: FormGroup;\r\n  supplierId!: number;\r\n  sentimentResult: string = '';\r\n  sentimentError: string = '';\r\n  errorMessage: string = '';  \r\n  isSummarizing: boolean = false;  \r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private supplierService: SupplierService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private http: HttpClient // ✅ Ensure HttpClient is injected\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.supplierId = Number(this.route.snapshot.paramMap.get('id'));\r\n\r\n    // Initialize the form\r\n    this.updateSupplierForm = this.fb.group({\r\n      name: ['', Validators.required],\r\n      address: ['', Validators.required],\r\n      phoneNumber: ['', [Validators.required, Validators.pattern('^[0-9]{8,15}$')]],\r\n      email: ['', [Validators.required, Validators.email]],\r\n      status: ['', Validators.required],\r\n      notes: [''],\r\n      sentiment: [''] // ✅ Add this\r\n\r\n    });\r\n\r\n    // Fetch supplier details and populate the form\r\n    this.supplierService.getSupplierById(this.supplierId).subscribe((supplier) => {\r\n      if (supplier) {\r\n        console.log('Fetched supplier:', supplier);\r\n\r\n        this.updateSupplierForm.patchValue({\r\n          name: supplier.name,\r\n          address: supplier.address,\r\n          phoneNumber: supplier.phoneNumber,\r\n          email: supplier.email,\r\n          status: supplier.status || 'ACTIVE',\r\n          notes: supplier.notes || '',\r\n          sentiment: supplier.sentiment || '',  // ✅ Add this\r\n          aiRating: supplier.aiRating || 0    \r\n        });\r\n\r\n        // ✅ Mark all controls as touched to ensure validation updates\r\n        Object.keys(this.updateSupplierForm.controls).forEach((field) => {\r\n          const control = this.updateSupplierForm.get(field);\r\n          if (control) {\r\n            control.markAsTouched();\r\n            control.updateValueAndValidity();\r\n          }\r\n        });\r\n\r\n        console.log('Form after patchValue:', this.updateSupplierForm.value);\r\n      }\r\n    });\r\n  }\r\n\r\n  analyzeSentiment(): void {\r\n    const notes = this.updateSupplierForm.get('notes')?.value;\r\n  \r\n    if (!notes) {\r\n      this.sentimentError = \"Please enter notes first.\";\r\n      return;\r\n    }\r\n  \r\n    this.supplierService.analyzeSentiment(notes).subscribe({\r\n      next: (response) => {\r\n        const sentiment = response.sentiment;\r\n        const aiRating = sentiment === 'POSITIVE' ? 5 : \r\n                         sentiment === 'NEUTRAL' ? 3 : 1;\r\n  \r\n        // ✅ Update form fields\r\n        this.updateSupplierForm.patchValue({\r\n          sentiment: sentiment,\r\n          aiRating: aiRating\r\n        });\r\n      },\r\n      error: (err) => {\r\n        this.sentimentError = \"Analysis failed. Try again.\";\r\n      }\r\n    });\r\n  }\r\n\r\n  summarizeNotes(): void {\r\n    const notes = this.updateSupplierForm.get('notes')?.value;\r\n  \r\n    if (!notes || notes.trim() === '') {\r\n      this.errorMessage = \"Please enter notes before summarizing.\";\r\n      return;\r\n    }\r\n  \r\n    this.isSummarizing = true;\r\n    this.errorMessage = '';\r\n  \r\n    const apiUrl = 'http://localhost:8080/api/suppliers/summarize';\r\n    const headers = { 'Content-Type': 'application/json' };\r\n    const requestBody = { inputs: notes }; // ✅ Ensure correct key\r\n  \r\n    this.http.post(apiUrl, requestBody, { headers }).subscribe(\r\n      (response: any) => {\r\n        console.log(\"Summarization Response:\", response);\r\n        this.isSummarizing = false;\r\n  \r\n        if (response.summary) {\r\n          this.updateSupplierForm.patchValue({ notes: response.summary });\r\n        } else {\r\n          this.errorMessage = \"Summarization failed.\";\r\n        }\r\n      },\r\n      (error) => {\r\n        console.error(\"Summarization Error:\", error);\r\n        this.isSummarizing = false;\r\n        this.errorMessage = \"Failed to summarize notes.\";\r\n      }\r\n    );\r\n  }\r\n  \r\n\r\n  onUpdate() {\r\n    if (this.updateSupplierForm.invalid) {\r\n        alert('Form is invalid. Check required fields.');\r\n        return;\r\n    }\r\n\r\n    const updateData = {\r\n        ...this.updateSupplierForm.value,\r\n        aiRating: this.updateSupplierForm.get('aiRating')?.value, // Add this\r\n        sentiment: this.updateSupplierForm.get('sentiment')?.value // Add this\r\n    };\r\n\r\n    this.supplierService.updateSupplier(this.supplierId, updateData).subscribe(() => {\r\n        alert('Supplier updated successfully!');\r\n        this.router.navigate(['/suppliers']);\r\n    });\r\n}\r\n}\r\n","<div class=\"form-container\">\r\n  <h2>Update Supplier</h2>\r\n  <form [formGroup]=\"updateSupplierForm\" (ngSubmit)=\"onUpdate()\">\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"name\">Supplier Name</label>\r\n      <input id=\"name\" formControlName=\"name\" type=\"text\" class=\"form-control\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"address\">Address</label>\r\n      <input id=\"address\" formControlName=\"address\" type=\"text\" class=\"form-control\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"phoneNumber\">Phone Number</label>\r\n      <input id=\"phoneNumber\" formControlName=\"phoneNumber\" type=\"text\" class=\"form-control\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"email\">Email</label>\r\n      <input id=\"email\" formControlName=\"email\" type=\"email\" class=\"form-control\" />\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"status\">Status:</label>\r\n      <select id=\"status\" formControlName=\"status\" class=\"form-control\">\r\n        <option value=\"ACTIVE\">Active</option>\r\n        <option value=\"INACTIVE\">Inactive</option>\r\n      </select>\r\n    </div>\r\n\r\n    <div class=\"form-group\">\r\n      <label for=\"notes\">Notes:</label>\r\n      <textarea id=\"notes\" formControlName=\"notes\" class=\"form-control\"></textarea>\r\n    </div>\r\n\r\n    <!-- ✅ Summarize Button (Inside Form) -->\r\n    <div class=\"form-group\">\r\n      <button type=\"button\" class=\"btn-summarize\" (click)=\"summarizeNotes()\">📝 Summarize</button>\r\n    </div>\r\n\r\n    <!-- ✅ Loading Indicator -->\r\n    <p *ngIf=\"isSummarizing\" class=\"loading-text\">Summarizing notes...</p>\r\n\r\n    <!-- ✅ Error Message -->\r\n    <p *ngIf=\"errorMessage\" class=\"error-text\">{{ errorMessage }}</p>\r\n\r\n    <!-- ✅ Submit Button (Inside Form) -->\r\n    <button type=\"submit\" class=\"btn btn-primary\" [disabled]=\"updateSupplierForm.invalid\">\r\n      Update\r\n    </button>  \r\n\r\n  </form>\r\n</div>\r\n"],"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;;;;;;;;IC0C/DC,EAAA,CAAAC,cAAA,YAA8C;IAAAD,EAAA,CAAAE,MAAA,2BAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;IAGtEH,EAAA,CAAAC,cAAA,YAA2C;IAAAD,EAAA,CAAAE,MAAA,GAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAAtBH,EAAA,CAAAI,SAAA,GAAkB;IAAlBJ,EAAA,CAAAK,iBAAA,CAAAC,MAAA,CAAAC,YAAA,CAAkB;;;ADnCjE,OAAM,MAAOC,uBAAuB;EAQlCC,YACUC,EAAe,EACfC,eAAgC,EAChCC,KAAqB,EACrBC,MAAc,EACdC,IAAgB,CAAC;EAAA,E;IAJjB,KAAAJ,EAAE,GAAFA,EAAE;IACF,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,IAAI,GAAJA,IAAI;IAVd,KAAAC,eAAe,GAAW,EAAE;IAC5B,KAAAC,cAAc,GAAW,EAAE;IAC3B,KAAAT,YAAY,GAAW,EAAE;IACzB,KAAAU,aAAa,GAAY,KAAK;EAQ3B;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,UAAU,GAAGC,MAAM,CAAC,IAAI,CAACR,KAAK,CAACS,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC,IAAI,CAAC,CAAC;IAEhE;IACA,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACd,EAAE,CAACe,KAAK,CAAC;MACtCC,IAAI,EAAE,CAAC,EAAE,EAAE3B,UAAU,CAAC4B,QAAQ,CAAC;MAC/BC,OAAO,EAAE,CAAC,EAAE,EAAE7B,UAAU,CAAC4B,QAAQ,CAAC;MAClCE,WAAW,EAAE,CAAC,EAAE,EAAE,CAAC9B,UAAU,CAAC4B,QAAQ,EAAE5B,UAAU,CAAC+B,OAAO,CAAC,eAAe,CAAC,CAAC,CAAC;MAC7EC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAChC,UAAU,CAAC4B,QAAQ,EAAE5B,UAAU,CAACgC,KAAK,CAAC,CAAC;MACpDC,MAAM,EAAE,CAAC,EAAE,EAAEjC,UAAU,CAAC4B,QAAQ,CAAC;MACjCM,KAAK,EAAE,CAAC,EAAE,CAAC;MACXC,SAAS,EAAE,CAAC,EAAE,CAAC,CAAC;KAEjB,CAAC;IAEF;IACA,IAAI,CAACvB,eAAe,CAACwB,eAAe,CAAC,IAAI,CAAChB,UAAU,CAAC,CAACiB,SAAS,CAAEC,QAAQ,IAAI;MAC3E,IAAIA,QAAQ,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEF,QAAQ,CAAC;QAE1C,IAAI,CAACb,kBAAkB,CAACgB,UAAU,CAAC;UACjCd,IAAI,EAAEW,QAAQ,CAACX,IAAI;UACnBE,OAAO,EAAES,QAAQ,CAACT,OAAO;UACzBC,WAAW,EAAEQ,QAAQ,CAACR,WAAW;UACjCE,KAAK,EAAEM,QAAQ,CAACN,KAAK;UACrBC,MAAM,EAAEK,QAAQ,CAACL,MAAM,IAAI,QAAQ;UACnCC,KAAK,EAAEI,QAAQ,CAACJ,KAAK,IAAI,EAAE;UAC3BC,SAAS,EAAEG,QAAQ,CAACH,SAAS,IAAI,EAAE;UACnCO,QAAQ,EAAEJ,QAAQ,CAACI,QAAQ,IAAI;SAChC,CAAC;QAEF;QACAC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACnB,kBAAkB,CAACoB,QAAQ,CAAC,CAACC,OAAO,CAAEC,KAAK,IAAI;UAC9D,MAAMC,OAAO,GAAG,IAAI,CAACvB,kBAAkB,CAACD,GAAG,CAACuB,KAAK,CAAC;UAClD,IAAIC,OAAO,EAAE;YACXA,OAAO,CAACC,aAAa,EAAE;YACvBD,OAAO,CAACE,sBAAsB,EAAE;;QAEpC,CAAC,CAAC;QAEFX,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,IAAI,CAACf,kBAAkB,CAAC0B,KAAK,CAAC;;IAExE,CAAC,CAAC;EACJ;EAEAC,gBAAgBA,CAAA;IACd,MAAMlB,KAAK,GAAG,IAAI,CAACT,kBAAkB,CAACD,GAAG,CAAC,OAAO,CAAC,EAAE2B,KAAK;IAEzD,IAAI,CAACjB,KAAK,EAAE;MACV,IAAI,CAACjB,cAAc,GAAG,2BAA2B;MACjD;;IAGF,IAAI,CAACL,eAAe,CAACwC,gBAAgB,CAAClB,KAAK,CAAC,CAACG,SAAS,CAAC;MACrDgB,IAAI,EAAGC,QAAQ,IAAI;QACjB,MAAMnB,SAAS,GAAGmB,QAAQ,CAACnB,SAAS;QACpC,MAAMO,QAAQ,GAAGP,SAAS,KAAK,UAAU,GAAG,CAAC,GAC5BA,SAAS,KAAK,SAAS,GAAG,CAAC,GAAG,CAAC;QAEhD;QACA,IAAI,CAACV,kBAAkB,CAACgB,UAAU,CAAC;UACjCN,SAAS,EAAEA,SAAS;UACpBO,QAAQ,EAAEA;SACX,CAAC;MACJ,CAAC;MACDa,KAAK,EAAGC,GAAG,IAAI;QACb,IAAI,CAACvC,cAAc,GAAG,6BAA6B;MACrD;KACD,CAAC;EACJ;EAEAwC,cAAcA,CAAA;IACZ,MAAMvB,KAAK,GAAG,IAAI,CAACT,kBAAkB,CAACD,GAAG,CAAC,OAAO,CAAC,EAAE2B,KAAK;IAEzD,IAAI,CAACjB,KAAK,IAAIA,KAAK,CAACwB,IAAI,EAAE,KAAK,EAAE,EAAE;MACjC,IAAI,CAAClD,YAAY,GAAG,wCAAwC;MAC5D;;IAGF,IAAI,CAACU,aAAa,GAAG,IAAI;IACzB,IAAI,CAACV,YAAY,GAAG,EAAE;IAEtB,MAAMmD,MAAM,GAAG,+CAA+C;IAC9D,MAAMC,OAAO,GAAG;MAAE,cAAc,EAAE;IAAkB,CAAE;IACtD,MAAMC,WAAW,GAAG;MAAEC,MAAM,EAAE5B;IAAK,CAAE,CAAC,CAAC;IAEvC,IAAI,CAACnB,IAAI,CAACgD,IAAI,CAACJ,MAAM,EAAEE,WAAW,EAAE;MAAED;IAAO,CAAE,CAAC,CAACvB,SAAS,CACvDiB,QAAa,IAAI;MAChBf,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEc,QAAQ,CAAC;MAChD,IAAI,CAACpC,aAAa,GAAG,KAAK;MAE1B,IAAIoC,QAAQ,CAACU,OAAO,EAAE;QACpB,IAAI,CAACvC,kBAAkB,CAACgB,UAAU,CAAC;UAAEP,KAAK,EAAEoB,QAAQ,CAACU;QAAO,CAAE,CAAC;OAChE,MAAM;QACL,IAAI,CAACxD,YAAY,GAAG,uBAAuB;;IAE/C,CAAC,EACA+C,KAAK,IAAI;MACRhB,OAAO,CAACgB,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5C,IAAI,CAACrC,aAAa,GAAG,KAAK;MAC1B,IAAI,CAACV,YAAY,GAAG,4BAA4B;IAClD,CAAC,CACF;EACH;EAGAyD,QAAQA,CAAA;IACN,IAAI,IAAI,CAACxC,kBAAkB,CAACyC,OAAO,EAAE;MACjCC,KAAK,CAAC,yCAAyC,CAAC;MAChD;;IAGJ,MAAMC,UAAU,GAAG;MACf,GAAG,IAAI,CAAC3C,kBAAkB,CAAC0B,KAAK;MAChCT,QAAQ,EAAE,IAAI,CAACjB,kBAAkB,CAACD,GAAG,CAAC,UAAU,CAAC,EAAE2B,KAAK;MACxDhB,SAAS,EAAE,IAAI,CAACV,kBAAkB,CAACD,GAAG,CAAC,WAAW,CAAC,EAAE2B,KAAK,CAAC;KAC9D;;IAED,IAAI,CAACvC,eAAe,CAACyD,cAAc,CAAC,IAAI,CAACjD,UAAU,EAAEgD,UAAU,CAAC,CAAC/B,SAAS,CAAC,MAAK;MAC5E8B,KAAK,CAAC,gCAAgC,CAAC;MACvC,IAAI,CAACrD,MAAM,CAACwD,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACxC,CAAC,CAAC;EACN;;;uBA1Ia7D,uBAAuB,EAAAR,EAAA,CAAAsE,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAxE,EAAA,CAAAsE,iBAAA,CAAAG,EAAA,CAAAC,eAAA,GAAA1E,EAAA,CAAAsE,iBAAA,CAAAK,EAAA,CAAAC,cAAA,GAAA5E,EAAA,CAAAsE,iBAAA,CAAAK,EAAA,CAAAE,MAAA,GAAA7E,EAAA,CAAAsE,iBAAA,CAAAQ,EAAA,CAAAC,UAAA;IAAA;EAAA;;;YAAvBvE,uBAAuB;MAAAwE,SAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UCXpCtF,EAAA,CAAAC,cAAA,aAA4B;UACtBD,EAAA,CAAAE,MAAA,sBAAe;UAAAF,EAAA,CAAAG,YAAA,EAAK;UACxBH,EAAA,CAAAC,cAAA,cAA+D;UAAxBD,EAAA,CAAAwF,UAAA,sBAAAC,0DAAA;YAAA,OAAYF,GAAA,CAAAvB,QAAA,EAAU;UAAA,EAAC;UAE5DhE,EAAA,CAAAC,cAAA,aAAwB;UACJD,EAAA,CAAAE,MAAA,oBAAa;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACvCH,EAAA,CAAA0F,SAAA,eAA2E;UAC7E1F,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,aAAwB;UACDD,EAAA,CAAAE,MAAA,eAAO;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACpCH,EAAA,CAAA0F,SAAA,gBAAiF;UACnF1F,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,cAAwB;UACGD,EAAA,CAAAE,MAAA,oBAAY;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAC7CH,EAAA,CAAA0F,SAAA,gBAAyF;UAC3F1F,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,cAAwB;UACHD,EAAA,CAAAE,MAAA,aAAK;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UAChCH,EAAA,CAAA0F,SAAA,iBAA8E;UAChF1F,EAAA,CAAAG,YAAA,EAAM;UAENH,EAAA,CAAAC,cAAA,cAAwB;UACFD,EAAA,CAAAE,MAAA,eAAO;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACnCH,EAAA,CAAAC,cAAA,kBAAkE;UACzCD,EAAA,CAAAE,MAAA,cAAM;UAAAF,EAAA,CAAAG,YAAA,EAAS;UACtCH,EAAA,CAAAC,cAAA,kBAAyB;UAAAD,EAAA,CAAAE,MAAA,gBAAQ;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAI9CH,EAAA,CAAAC,cAAA,cAAwB;UACHD,EAAA,CAAAE,MAAA,cAAM;UAAAF,EAAA,CAAAG,YAAA,EAAQ;UACjCH,EAAA,CAAA0F,SAAA,oBAA6E;UAC/E1F,EAAA,CAAAG,YAAA,EAAM;UAGNH,EAAA,CAAAC,cAAA,cAAwB;UACsBD,EAAA,CAAAwF,UAAA,mBAAAG,0DAAA;YAAA,OAASJ,GAAA,CAAA/B,cAAA,EAAgB;UAAA,EAAC;UAACxD,EAAA,CAAAE,MAAA,8BAAY;UAAAF,EAAA,CAAAG,YAAA,EAAS;UAI9FH,EAAA,CAAA4F,UAAA,KAAAC,qCAAA,gBAAsE;UAGtE7F,EAAA,CAAA4F,UAAA,KAAAE,qCAAA,gBAAiE;UAGjE9F,EAAA,CAAAC,cAAA,kBAAsF;UACpFD,EAAA,CAAAE,MAAA,gBACF;UAAAF,EAAA,CAAAG,YAAA,EAAS;;;UAjDLH,EAAA,CAAAI,SAAA,GAAgC;UAAhCJ,EAAA,CAAA+F,UAAA,cAAAR,GAAA,CAAA/D,kBAAA,CAAgC;UAyChCxB,EAAA,CAAAI,SAAA,IAAmB;UAAnBJ,EAAA,CAAA+F,UAAA,SAAAR,GAAA,CAAAtE,aAAA,CAAmB;UAGnBjB,EAAA,CAAAI,SAAA,GAAkB;UAAlBJ,EAAA,CAAA+F,UAAA,SAAAR,GAAA,CAAAhF,YAAA,CAAkB;UAGwBP,EAAA,CAAAI,SAAA,GAAuC;UAAvCJ,EAAA,CAAA+F,UAAA,aAAAR,GAAA,CAAA/D,kBAAA,CAAAyC,OAAA,CAAuC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}